[{"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js":"1","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js":"2","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js":"3","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js":"4","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js":"5","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js":"6","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js":"7","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js":"8","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js":"9","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js":"10","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js":"11","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js":"12","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js":"13","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js":"14","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js":"15"},{"size":751,"mtime":1612715187992,"results":"16","hashOfConfig":"17"},{"size":1105,"mtime":1613570945333,"results":"18","hashOfConfig":"17"},{"size":10819,"mtime":1613346315472,"results":"19","hashOfConfig":"17"},{"size":462,"mtime":1612715074384,"results":"20","hashOfConfig":"17"},{"size":2579,"mtime":1613350771943,"results":"21","hashOfConfig":"17"},{"size":847,"mtime":1613346315477,"results":"22","hashOfConfig":"17"},{"size":6797,"mtime":1613346315478,"results":"23","hashOfConfig":"17"},{"size":7336,"mtime":1613582152765,"results":"24","hashOfConfig":"17"},{"size":265,"mtime":1612715187993,"results":"25","hashOfConfig":"17"},{"size":119,"mtime":1612715187990,"results":"26","hashOfConfig":"17"},{"size":5880,"mtime":1613570813565,"results":"27","hashOfConfig":"17"},{"size":4229,"mtime":1613580502171,"results":"28","hashOfConfig":"17"},{"size":973,"mtime":1613567988408,"results":"29","hashOfConfig":"17"},{"size":2333,"mtime":1613579251306,"results":"30","hashOfConfig":"17"},{"size":1807,"mtime":1613582291480,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7dmyh3",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js",[],["67","68"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js",["69","70"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js",["71","72","73","74","75","76","77","78"],"import axios from \"axios\";\r\nimport '../css/Login.css';\r\nimport RegisterImage from '../img/register.svg'\r\nimport LoginImage from '../img/login.svg'\r\nimport React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst emailRegex = /\\S+@\\S+\\.\\S+/;\r\n\r\n\r\n\r\nconst shapeStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: '#f0f0f0', borderRadius: '55px', minWidth: '380px', width: '100%', margin: '10px 0', height: '55px',display: 'flex', fontFamily: \"Poppins\" }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected  }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled ? 'red' : \"#f0f0f0\",\r\n            marginTop: 0,\r\n            color: 'black',\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n            maxWidth: '380px',\r\n            width: '100%',\r\n        };\r\n    },\r\n\r\n};\r\n\r\nconst options = [\r\n    { value: 'customer', label: 'Customer' },\r\n    { value: 'supplier', label: 'Supplier' }\r\n];\r\n\r\nclass Login extends Component{\r\nstate = {\r\n    email: {\r\n        fieldName: 'email',\r\n        value: '',\r\n        showError: false,\r\n        validate: () => this.validateEmail(),\r\n    },\r\n    password: {\r\n        fieldName: 'password',\r\n        value: '',\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    repassword: {\r\n        fieldName: 'repassword',\r\n        value: '',\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    role: {\r\n        fieldName: 'role',\r\n        value: '',\r\n        showError: false,\r\n    },\r\n    company: {\r\n        fieldName: 'company',\r\n        value: '',\r\n        showError: false,\r\n    },\r\n    loginResponse: {\r\n        fieldName: 'loginResponse',\r\n        response: null,\r\n    },\r\n    avatar: {\r\n        fieldName: 'avatar',\r\n        avatarImg: '',\r\n        avatarUserId: '',\r\n    },\r\n    isModalOpen: false,\r\n    signUpMode: false,\r\n    selectedOption:''\r\n};\r\n\r\nrefresh = () => {\r\n    window.location.reload(false);\r\n};\r\n\r\ntoggleIsModalOpen = () => {\r\n    const { isModalOpen } = this.state;\r\n    this.setState({ isModalOpen: !isModalOpen });\r\n};\r\n\r\nupdateField = (fieldName, value) => {\r\n    const { state } = this;\r\n    state[fieldName].value = value;\r\n    this.setState(state);\r\n};\r\n\r\nvalidatePassword = () => {\r\n    const { password } = this.state;\r\n    password.showError = password.value.length < 6;\r\n    this.setState({ password });\r\n};\r\n\r\nvalidateEmail = () => {\r\n    const { email } = this.state;\r\n    email.showError = !emailRegex.test(email.value);\r\n    this.setState({ email });\r\n};\r\n\r\nareAllFieldsCorrect = () => {\r\n    const { state } = this;\r\n    const fields = Object.values(state);\r\n    for (let i = 0; i < fields.length - 1; i += 1) {\r\n        if (fields[i].showError) return false;\r\n    }\r\n    return true;\r\n};\r\nhandleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/login', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                localStorage.setItem('role', response.data.role);\r\n                if (response.data.role == 'supplier') {\r\n                     this.props.history.push('/home');\r\n                    console.log(\"supplier\")\r\n                } else if (response.data.role == 'customer') {\r\n                    this.props.history.push('/home');\r\n                    console.log(\"customer\")\r\n                } else  {\r\n                    console.log(\"chuj wie\");\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\nhandleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/register', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                if (response.status == 200) {\r\n                    this.handleClick()\r\n                }\r\n            })\r\n    }\r\n};\r\n// onLoadedData = (data) => {\r\n//     this.props.onLoadedData({\r\n//         //name: data.name,\r\n//         phone: data.phone,\r\n//         email: data.email,\r\n//         userId: data.userId,\r\n//         imageUrl: data.imageUrl,\r\n//     });\r\n// };\r\n//\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n}\r\n\r\nhandleClick() {\r\n    this.setState(state => ({\r\n        signUpMode: !state.signUpMode\r\n    }));\r\n}\r\n\r\nhandleChange = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n}\r\n\r\n\r\nrender() {\r\n    const { t } = this.props;\r\n    return (\r\n        <div className={`container ${this.state.signUpMode ? 'sign-up-mode' : null }`}>\r\n            <div className=\"forms-container\">\r\n                <div className=\"signin-signup\">\r\n\r\n                    <form action=\"#\" className=\"sign-in-form\">\r\n                        <h2 className=\"title\">Sign in</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\" value={this.state.email.value} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn solid\" onClick={this.handleLogin}/>\r\n                    </form>\r\n                    <form action=\"#\" className=\"sign-up-form\">\r\n                        <h2 className=\"title\">Sign up</h2>\r\n                            <i className=\"fas fa-user\"></i>\r\n                            {/*<select defaultValue=\"select\" className=\"input-field\" onChange={(e) => this.updateField('company', e.target.value)}>*/}\r\n                            {/*    <option  hidden value=\"select\" disabled>Rola</option>*/}\r\n                            {/*    <option  data-id=\"supplier\">supplier</option>*/}\r\n                            {/*    <option  data-id=\"customer\">customer</option>*/}\r\n                            {/*    <></>*/}\r\n                            {/*</select>*/}\r\n                        <Select\r\n                            value={this.state.value}\r\n                            onChange={this.handleChange}\r\n                            options={options}\r\n                            styles={shapeStyles}\r\n                        />\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('company', e.target.value)} placeholder=\"Company\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            <input type=\"email\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('repassword', e.target.value)} placeholder=\"Repassword\"/>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn\" value=\"Sign up\" onClick={this.handleRegister}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panels-container\">\r\n                <div className=\"panel left-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>New here ?</h3>\r\n                        <p>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\r\n                            ex ratione. Aliquid!\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign up\r\n                        </button>\r\n                    </div>\r\n                    <img className=\"image\"  src={LoginImage} alt=\"\"/>\r\n                </div>\r\n                <div className=\"panel right-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>One of us ?</h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                            laboriosam ad deleniti.\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign in\r\n                        </button>\r\n                    </div>\r\n                    <img src={RegisterImage}  className=\"image\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default Login","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js",["79","80","81","82","83"],"import React, { useState, useEffect } from 'react';\r\nimport \"../css/Sidebar.css\";\r\nimport {SidebarData} from './SidebarData';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Avatar from './img/src_avatar.svg'\r\nimport Logo1 from './img/favicon1.ico'\r\nimport {useDispatch} from \"react-redux\";\r\nimport action from \"./action/ChangeWidthAction\";\r\nimport axios from \"axios\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const [visible, setVisible] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    const showSidebar = () => {\r\n        setVisible(prev => !prev)\r\n        dispatch(action(!visible))\r\n    }\r\n\r\n    const logout = () => {\r\n        axios\r\n            .post(`http://localhost:8080/api/logout`)\r\n            .then((response) => {\r\n                console.log(\"response.data\")\r\n            })\r\n       // this.props.history.push('/login');\r\n    }\r\n\r\n    return(\r\n        <div id=\"body-pd\" className={ `myBody ${visible ? 'body-pd' : '' }`}>\r\n        <header className={ `${visible ? 'header body-pd' : \"header\" }`} id=\"header\">\r\n            <div className=\"header__toggle\" onClick={() => showSidebar()}>\r\n                <i className='bx bx-menu' id=\"header-toggle\"> {visible ? <MenuIcon/> : <CloseIcon/> }</i>\r\n            </div>\r\n            <div className=\"header__img\" onClick={() => logout()}>\r\n                <img src={Avatar} alt=\"\"/>\r\n            </div>\r\n        </header>\r\n        <div className={ `${visible ? 'l-navbar show' : \"l-navbar\"}`} id=\"nav-bar\">\r\n            <nav className= \"nav\" >\r\n                <div>\r\n                    <div className=\"nav__list\">\r\n                        <a className=\"nav__logo\">\r\n                            <img className='nav__logo-icon' src={Logo1}></img>\r\n                            <span className=\"nav__logo-name\">T-EDI</span>\r\n                        </a>\r\n                        {SidebarData.map((val,key) =>{\r\n                            return(\r\n                                <a className=\"nav__link\" id={window.location.pathname == val.link ? \"active\" : \"\"} key={key} onClick={() => {window.location.pathname = val.link}}>\r\n                                    {\" \"}\r\n                                    <div id = \"nav__icon\">{val.icon}</div>\r\n                                    <div id = \"nav__name\">{val.title}</div>\r\n                                </a>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js",["84","85","86","87","88"],"import React, {Component} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport Row from './Row'\r\nimport '../css/Tab.css'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst classes = makeStyles();\r\n\r\nclass Tab extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delivery:[],\r\n            isLoadnig:false,\r\n            isError:false,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            count:100,\r\n            company:'',\r\n            baseNum: '',\r\n            cusNum: '',\r\n            cancelToken: undefined\r\n        }\r\n    }\r\n\r\n    createData(deliveryOrderId, creationDate, supplier, customer, baseRef, numberOrderCustomer, docNet, docVatSum, docTotal) {\r\n        return {\r\n            deliveryOrderId,\r\n            creationDate,\r\n            supplier,\r\n            customer,\r\n            baseRef,\r\n            numberOrderCustomer,\r\n            docNet,\r\n            docVatSum,\r\n            docTotal,\r\n        };\r\n    }\r\n\r\n     handleChangePage = (event, newPage) => {\r\n        this.setState({page: newPage});\r\n    };\r\n\r\n     handleChangeRowsPerPage = (event) => {\r\n         this.setState({rowsPerPage : parseInt(event.target.value, 10), page: 0});\r\n    };\r\n\r\n    async componentDidMount(){\r\n        this.setState({isLoading: true})\r\n        axios\r\n            .get(`http://localhost:8080/api/delivery/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${this.state.company}&baseRef=${this.state.baseNum}&cusNumber=${this.state.cusNum}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.uploadDate(response.data)\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {company, baseNum, cusNum, rowsPerPage, page} = this.state\r\n        if (company !== prevState.company || baseNum !== prevState.baseNum || cusNum !== prevState.cusNum || rowsPerPage !== prevState.rowsPerPage || page !== prevState.page){\r\n            if (typeof this.state.cancelToken != typeof undefined) {\r\n                this.state.cancelToken.cancel(\"Operation canceled due to new request.\");\r\n            }\r\n            this.state.cancelToken = axios.CancelToken.source();\r\n            axios\r\n                .get(`http://localhost:8080/api/delivery/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${company}&baseRef=${baseNum}&cusNumber=${cusNum}&size=${rowsPerPage}&page=${page}`, { cancelToken: this.state.cancelToken.token })\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    if(response.status == 204)\r\n                    {\r\n                        this.uploadDate([])\r\n                    }\r\n                    else\r\n                        this.uploadDate(response.data)\r\n                })\r\n        }\r\n    }\r\n\r\n    updateField = (fieldName, value) => {\r\n        const { state } = this;\r\n        state[fieldName] = value;\r\n        this.setState(state);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.width ? 'offset' : 'withoutOffset'}`}>\r\n                <input type='text' placeholder='Firma' name='company' onChange={(e) => this.setState({company : e.target.value})}/>\r\n                <input type='text' placeholder='Numer dostawcy' name='baseRef' onChange={(e) => this.setState({baseNum : e.target.value})}/>\r\n                <input type='text' placeholder='Numer klienta' name='cusNumber' onChange={(e) => this.setState({cusNum : e.target.value})}/>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell />\r\n                                <StyledTableCell>Data</StyledTableCell>\r\n                                <StyledTableCell>{localStorage.getItem(\"role\") == \"customer\" ? 'Dostawca' : 'Klient' }</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">Numer&nbsp;zamówienia</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">Numer&nbsp;klienta</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;netto</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Vat</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;brutto</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.delivery && this.state.delivery.map((row) => (\r\n                                <Row key={row.name} row={row} />\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={this.state.count}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onPageChange={this.handleChangePage}\r\n                    onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n    uploadDate(props) {\r\n        let tempArray = [];\r\n        props.forEach(data => {\r\n            let temp = this.createData(data.deliveryOrderId, data.creationDate, data.supplier.name, data.customer.name, data.baseRef, data.numberOrderCustomer, data.docNet, data.docVatSum, data.docTotal)\r\n            tempArray.push(temp)\r\n        })\r\n        this.setState({delivery : tempArray})\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        width: state\r\n    }\r\n}\r\nexport default connect (mapStateToProps)(Tab)","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js",["89"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React, {useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport {useSelector} from 'react-redux';\r\nimport Row from './rowRelation'\r\nimport '../css/Tab.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst classes = makeStyles();\r\n\r\n\r\nconst Relation = (props) => {\r\n\r\n    const [relations, setRelations] = useState([]);\r\n    const [isLoadnig, setIsLoadnig] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [count, setCount] = useState(100);\r\n    const [company, setCompany] = useState('');\r\n    const [baseNum, setBaseNum] = useState('');\r\n    const [cusNum, setCusNum] = useState('');\r\n    const [text, setText] = useState(false);\r\n    const width = useSelector((state => state))\r\n\r\n\r\n    const createData = (relationUsersId, creationDate, supplier, customer, active) => {\r\n        return {\r\n            relationUsersId,\r\n            creationDate,\r\n            supplier,\r\n            customer,\r\n            active\r\n        };\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage({page: newPage});\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const uploadDate = (props) => {\r\n        let tempArray = [];\r\n        props.forEach(data => {\r\n            let temp = createData(data.relationUsersId, data.creationDate, data.supplier.name, data.customer.name, data.active)\r\n            tempArray.push(temp)\r\n        })\r\n        setRelations(tempArray)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                uploadDate(response.data)\r\n            })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        console.log(width)\r\n    }, [width])\r\n\r\n    // React.useEffect(() => {\r\n    //     axios\r\n    //         //.get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${company}&baseRef=${baseNum}&cusNumber=${cusNum}&size=${rowsPerPage}&page=${page}`)\r\n    //         .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n    //         .then((response) => {\r\n    //             console.log(response)\r\n    //             if(response.status == 204)\r\n    //             {\r\n    //                 this.uploadDate([])\r\n    //             }\r\n    //             else\r\n    //                 this.uploadDate(response.data)\r\n    //         })\r\n    // }, [company, baseNum , cusNum, rowsPerPage, page])\r\n\r\n    React.useEffect(() => {\r\n        if (text == true) {\r\n            setText(false)\r\n            axios\r\n                .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                    uploadDate(response.data)\r\n                })\r\n        }\r\n        console.log(text)\r\n    }, [text])\r\n\r\n\r\n    // const updateField = (fieldName, value) => {\r\n    //     const { state } = this;\r\n    //     state[fieldName] = value;\r\n    //     this.setState(state);\r\n    // };\r\n    return (\r\n        <div className={`${width ? 'offset' : 'withoutOffset'}`}>\r\n            <div className= \"buttonContainer\">\r\n                <Link to = {\"/addRelations\"}>Dodaj firmę</Link>\r\n                <input type='text' placeholder='Firma' name='company' onChange={(e) => setCompany(e.target.valu)}/>\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Data</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Firma</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Akcja</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {relations && relations.map((row) => (\r\n                            <Row key={row.name} row={row} text={(textContent) => setText(textContent)}/>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                component=\"div\"\r\n                count={count}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default Relation","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js",["105","106","107","108","109","110","111","112","113","114"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js",["115","116","117","118","119","120"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js",["121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":5,"column":34,"nodeType":"129","messageId":"130","endLine":5,"endColumn":44},{"ruleId":"127","severity":1,"message":"131","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":119,"column":33,"nodeType":"134","messageId":"135","endLine":119,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":119,"column":71,"nodeType":"134","messageId":"135","endLine":119,"endColumn":73},{"ruleId":"132","severity":1,"message":"136","line":136,"column":40,"nodeType":"134","messageId":"135","endLine":136,"endColumn":42},{"ruleId":"132","severity":1,"message":"136","line":139,"column":47,"nodeType":"134","messageId":"135","endLine":139,"endColumn":49},{"ruleId":"132","severity":1,"message":"133","line":164,"column":33,"nodeType":"134","messageId":"135","endLine":164,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":164,"column":71,"nodeType":"134","messageId":"135","endLine":164,"endColumn":73},{"ruleId":"132","severity":1,"message":"136","line":181,"column":37,"nodeType":"134","messageId":"135","endLine":181,"endColumn":39},{"ruleId":"127","severity":1,"message":"137","line":224,"column":13,"nodeType":"129","messageId":"130","endLine":224,"endColumn":14},{"ruleId":"127","severity":1,"message":"138","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":45,"column":25,"nodeType":"141","endLine":45,"endColumn":50},{"ruleId":"142","severity":1,"message":"143","line":46,"column":29,"nodeType":"141","endLine":46,"endColumn":73},{"ruleId":"139","severity":1,"message":"140","line":51,"column":33,"nodeType":"141","endLine":51,"endColumn":180},{"ruleId":"132","severity":1,"message":"136","line":51,"column":87,"nodeType":"134","messageId":"135","endLine":51,"endColumn":89},{"ruleId":"127","severity":1,"message":"144","line":26,"column":7,"nodeType":"129","messageId":"130","endLine":26,"endColumn":21},{"ruleId":"127","severity":1,"message":"145","line":34,"column":7,"nodeType":"129","messageId":"130","endLine":34,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":91,"column":13,"nodeType":"148","endLine":91,"endColumn":23},{"ruleId":"132","severity":1,"message":"136","line":96,"column":40,"nodeType":"134","messageId":"135","endLine":96,"endColumn":42},{"ruleId":"132","severity":1,"message":"136","line":124,"column":80,"nodeType":"134","messageId":"135","endLine":124,"endColumn":82},{"ruleId":"132","severity":1,"message":"136","line":91,"column":64,"nodeType":"134","messageId":"135","endLine":91,"endColumn":66},{"ruleId":"127","severity":1,"message":"144","line":28,"column":7,"nodeType":"129","messageId":"130","endLine":28,"endColumn":21},{"ruleId":"127","severity":1,"message":"145","line":36,"column":7,"nodeType":"129","messageId":"130","endLine":36,"endColumn":14},{"ruleId":"127","severity":1,"message":"149","line":42,"column":12,"nodeType":"129","messageId":"130","endLine":42,"endColumn":21},{"ruleId":"127","severity":1,"message":"150","line":42,"column":23,"nodeType":"129","messageId":"130","endLine":42,"endColumn":35},{"ruleId":"127","severity":1,"message":"151","line":43,"column":12,"nodeType":"129","messageId":"130","endLine":43,"endColumn":19},{"ruleId":"127","severity":1,"message":"152","line":43,"column":21,"nodeType":"129","messageId":"130","endLine":43,"endColumn":31},{"ruleId":"127","severity":1,"message":"153","line":46,"column":19,"nodeType":"129","messageId":"130","endLine":46,"endColumn":27},{"ruleId":"127","severity":1,"message":"154","line":47,"column":12,"nodeType":"129","messageId":"130","endLine":47,"endColumn":19},{"ruleId":"127","severity":1,"message":"155","line":48,"column":12,"nodeType":"129","messageId":"130","endLine":48,"endColumn":19},{"ruleId":"127","severity":1,"message":"156","line":48,"column":21,"nodeType":"129","messageId":"130","endLine":48,"endColumn":31},{"ruleId":"127","severity":1,"message":"157","line":49,"column":12,"nodeType":"129","messageId":"130","endLine":49,"endColumn":18},{"ruleId":"127","severity":1,"message":"158","line":49,"column":20,"nodeType":"129","messageId":"130","endLine":49,"endColumn":29},{"ruleId":"159","severity":1,"message":"160","line":89,"column":8,"nodeType":"161","endLine":89,"endColumn":10,"suggestions":"162"},{"ruleId":"132","severity":1,"message":"136","line":111,"column":18,"nodeType":"134","messageId":"135","endLine":111,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":121,"column":8,"nodeType":"161","endLine":121,"endColumn":14,"suggestions":"163"},{"ruleId":"127","severity":1,"message":"164","line":5,"column":21,"nodeType":"129","messageId":"130","endLine":5,"endColumn":31},{"ruleId":"127","severity":1,"message":"165","line":8,"column":9,"nodeType":"129","messageId":"130","endLine":8,"endColumn":25},{"ruleId":"127","severity":1,"message":"166","line":8,"column":27,"nodeType":"129","messageId":"130","endLine":8,"endColumn":33},{"ruleId":"127","severity":1,"message":"167","line":12,"column":8,"nodeType":"129","messageId":"130","endLine":12,"endColumn":13},{"ruleId":"127","severity":1,"message":"168","line":45,"column":18,"nodeType":"129","messageId":"130","endLine":45,"endColumn":25},{"ruleId":"127","severity":1,"message":"169","line":46,"column":12,"nodeType":"129","messageId":"130","endLine":46,"endColumn":18},{"ruleId":"127","severity":1,"message":"170","line":46,"column":20,"nodeType":"129","messageId":"130","endLine":46,"endColumn":29},{"ruleId":"127","severity":1,"message":"171","line":47,"column":12,"nodeType":"129","messageId":"130","endLine":47,"endColumn":19},{"ruleId":"127","severity":1,"message":"172","line":48,"column":18,"nodeType":"129","messageId":"130","endLine":48,"endColumn":25},{"ruleId":"132","severity":1,"message":"136","line":78,"column":66,"nodeType":"134","messageId":"135","endLine":78,"endColumn":68},{"ruleId":"127","severity":1,"message":"173","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":11},{"ruleId":"127","severity":1,"message":"174","line":56,"column":12,"nodeType":"129","messageId":"130","endLine":56,"endColumn":21},{"ruleId":"127","severity":1,"message":"175","line":56,"column":23,"nodeType":"129","messageId":"130","endLine":56,"endColumn":35},{"ruleId":"127","severity":1,"message":"176","line":57,"column":12,"nodeType":"129","messageId":"130","endLine":57,"endColumn":20},{"ruleId":"127","severity":1,"message":"177","line":57,"column":22,"nodeType":"129","messageId":"130","endLine":57,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":72,"column":21,"nodeType":"141","endLine":72,"endColumn":45},{"ruleId":"127","severity":1,"message":"138","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"178","line":29,"column":8,"nodeType":"161","endLine":29,"endColumn":33,"suggestions":"179"},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'t' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'StyledTableRow' is assigned a value but never used.","'classes' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'isLoadnig' is assigned a value but never used.","'setIsLoadnig' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'setCount' is assigned a value but never used.","'company' is assigned a value but never used.","'baseNum' is assigned a value but never used.","'setBaseNum' is assigned a value but never used.","'cusNum' is assigned a value but never used.","'setCusNum' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'uploadDate'. Either include it or remove the dependency array.","ArrayExpression",["182"],["183"],"'withStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Modal' is defined but never used.","'setOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'details' is assigned a value but never used.","'setText' is assigned a value but never used.","'Row' is defined but never used.","'relations' is assigned a value but never used.","'setRelations' is assigned a value but never used.","'iterator' is assigned a value but never used.","'setIterator' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.barCode', 'props.name', and 'props.valueNet'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [uploadDate]",{"range":"191","text":"192"},"Update the dependencies array to be: [text, uploadDate]",{"range":"193","text":"194"},"Update the dependencies array to be: [name, barCode, valueNet, props.name, props.valueNet, props.barCode]",{"range":"195","text":"196"},[2871,2873],"[uploadDate]",[4153,4159],"[text, uploadDate]",[773,798],"[name, barCode, valueNet, props.name, props.valueNet, props.barCode]"]