[{"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js":"1","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js":"2","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js":"3","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js":"4"},{"size":424,"mtime":1611523318836,"results":"5","hashOfConfig":"6"},{"size":533,"mtime":1612085431877,"results":"7","hashOfConfig":"6"},{"size":9754,"mtime":1612085263417,"results":"8","hashOfConfig":"6"},{"size":462,"mtime":1612085263418,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"7dmyh3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js",[],["20","21"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js",["22"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js",["23","24","25","26","27","28","29","30"],"import axios from \"axios\";\r\nimport '../css/Login.css';\r\nimport RegisterImage from '../img/register.svg'\r\nimport LoginImage from '../img/login.svg'\r\nimport React, {Component} from \"react\";\r\n\r\nconst emailRegex = /\\S+@\\S+\\.\\S+/;\r\n\r\nclass Login extends Component{\r\nstate = {\r\n    email: {\r\n        fieldName: 'email',\r\n        value: '',\r\n        //   error: this.props.t('LoginPage.alerts.email'),\r\n        showError: false,\r\n        validate: () => this.validateEmail(),\r\n    },\r\n    password: {\r\n        fieldName: 'password',\r\n        value: '',\r\n        //  error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    repassword: {\r\n        fieldName: 'repassword',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    role: {\r\n        fieldName: 'role',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n    },\r\n    company: {\r\n        fieldName: 'company',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n    },\r\n    loginResponse: {\r\n        fieldName: 'loginResponse',\r\n        response: null,\r\n    },\r\n    avatar: {\r\n        fieldName: 'avatar',\r\n        avatarImg: '',\r\n        avatarUserId: '',\r\n    },\r\n    isModalOpen: false,\r\n    signUpMode: false\r\n};\r\n\r\nrefresh = () => {\r\n    window.location.reload(false);\r\n};\r\n\r\ntoggleIsModalOpen = () => {\r\n    const { isModalOpen } = this.state;\r\n    this.setState({ isModalOpen: !isModalOpen });\r\n};\r\n\r\nupdateField = (fieldName, value) => {\r\n    const { state } = this;\r\n    state[fieldName].value = value;\r\n    this.setState(state);\r\n};\r\n\r\nvalidatePassword = () => {\r\n    const { password } = this.state;\r\n    password.showError = password.value.length < 6;\r\n    this.setState({ password });\r\n};\r\n\r\nvalidateEmail = () => {\r\n    const { email } = this.state;\r\n    email.showError = !emailRegex.test(email.value);\r\n    this.setState({ email });\r\n};\r\n\r\nareAllFieldsCorrect = () => {\r\n    const { state } = this;\r\n    const fields = Object.values(state);\r\n    for (let i = 0; i < fields.length - 1; i += 1) {\r\n        if (fields[i].showError) return false;\r\n    }\r\n    return true;\r\n};\r\nhandleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/login', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                if (response.data.role == 'Supplier') {\r\n                    // this.props.history.push('/provider-panel');\r\n                    console.log(\"SUPPLIER\")\r\n                } else if (response.data.role == 'Customer') {\r\n                    console.log(\"Customer\")\r\n                } else  {\r\n                    console.log(\"chuj wie\");\r\n                }\r\n            })\r\n    }\r\n\r\n};\r\n\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\nhandleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/register', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                if (response.status == 200) {\r\n                    this.handleClick()\r\n                }\r\n\r\n            })\r\n    }\r\n};\r\n// onLoadedData = (data) => {\r\n//     this.props.onLoadedData({\r\n//         //name: data.name,\r\n//         phone: data.phone,\r\n//         email: data.email,\r\n//         userId: data.userId,\r\n//         imageUrl: data.imageUrl,\r\n//     });\r\n// };\r\n//\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n\r\n// componentDidMount() {\r\n// fetch('Http://localhost:8080/api/users')\r\n//     .then(response => response.json())\r\n//     .then(data =>{\r\n//         console.log(data);\r\n//         this.setState({data})\r\n//     })\r\n// }\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n}\r\n\r\nhandleClick() {\r\n    this.setState(state => ({\r\n        signUpMode: !state.signUpMode\r\n    }));\r\n}\r\n\r\n\r\nrender() {\r\n    const { t } = this.props;\r\n    return (\r\n        <div className={`container ${this.state.signUpMode ? 'sign-up-mode' : null }`}>\r\n            <div className=\"forms-container\">\r\n                <div className=\"signin-signup\">\r\n                    <form action=\"#\" className=\"sign-in-form\">\r\n                        <h2 className=\"title\">Sign in</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\" value={this.state.email.value} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn solid\" onClick={this.handleLogin}/>\r\n                    </form>\r\n                    <form action=\"#\" className=\"sign-up-form\">\r\n                        <h2 className=\"title\">Sign up</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('role', e.target.value)} placeholder=\"Role\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('company', e.target.value)} placeholder=\"Company\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            <input type=\"email\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('repassword', e.target.value)} placeholder=\"Repassword\"/>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn\" value=\"Sign up\" onClick={this.handleRegister}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panels-container\">\r\n                <div className=\"panel left-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>New here ?</h3>\r\n                        <p>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\r\n                            ex ratione. Aliquid!\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign up\r\n                        </button>\r\n                    </div>\r\n                    <img className=\"image\"  src={LoginImage} alt=\"\"/>\r\n                </div>\r\n                <div className=\"panel right-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>One of us ?</h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                            laboriosam ad deleniti.\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign in\r\n                        </button>\r\n                    </div>\r\n                    <img src={RegisterImage}  className=\"image\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default Login","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":34,"nodeType":"37","messageId":"38","endLine":3,"endColumn":44},{"ruleId":"39","severity":1,"message":"40","line":98,"column":33,"nodeType":"41","messageId":"42","endLine":98,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":98,"column":71,"nodeType":"41","messageId":"42","endLine":98,"endColumn":73},{"ruleId":"39","severity":1,"message":"43","line":115,"column":40,"nodeType":"41","messageId":"42","endLine":115,"endColumn":42},{"ruleId":"39","severity":1,"message":"43","line":118,"column":47,"nodeType":"41","messageId":"42","endLine":118,"endColumn":49},{"ruleId":"39","severity":1,"message":"40","line":143,"column":33,"nodeType":"41","messageId":"42","endLine":143,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":143,"column":71,"nodeType":"41","messageId":"42","endLine":143,"endColumn":73},{"ruleId":"39","severity":1,"message":"43","line":160,"column":37,"nodeType":"41","messageId":"42","endLine":160,"endColumn":39},{"ruleId":"35","severity":1,"message":"44","line":209,"column":13,"nodeType":"37","messageId":"38","endLine":209,"endColumn":14},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'t' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]