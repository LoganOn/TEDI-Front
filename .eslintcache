[{"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js":"1","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js":"2","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js":"3","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js":"4","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js":"5","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js":"6","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js":"7","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js":"8","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js":"9","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js":"10","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js":"11","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js":"12","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js":"13","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js":"14","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js":"15","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\UserPanel.js":"16"},{"size":751,"mtime":1612715187992,"results":"17","hashOfConfig":"18"},{"size":1025,"mtime":1613600415499,"results":"19","hashOfConfig":"18"},{"size":11756,"mtime":1613601336241,"results":"20","hashOfConfig":"18"},{"size":462,"mtime":1612715074384,"results":"21","hashOfConfig":"18"},{"size":5762,"mtime":1613636445871,"results":"22","hashOfConfig":"18"},{"size":821,"mtime":1613601598914,"results":"23","hashOfConfig":"18"},{"size":7072,"mtime":1613607560635,"results":"24","hashOfConfig":"18"},{"size":10483,"mtime":1613634334318,"results":"25","hashOfConfig":"18"},{"size":265,"mtime":1612715187993,"results":"26","hashOfConfig":"18"},{"size":119,"mtime":1612715187990,"results":"27","hashOfConfig":"18"},{"size":5880,"mtime":1613570813565,"results":"28","hashOfConfig":"18"},{"size":3478,"mtime":1613603825331,"results":"29","hashOfConfig":"18"},{"size":973,"mtime":1613600455107,"results":"30","hashOfConfig":"18"},{"size":1643,"mtime":1613601598927,"results":"31","hashOfConfig":"18"},{"size":6086,"mtime":1613636402607,"results":"32","hashOfConfig":"18"},{"size":2292,"mtime":1613636050586,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"7dmyh3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js",[],["72","73"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js",["74"],"import React, {Component} from \"react\";\r\nimport Login from \"./component/Login\";\r\nimport Sidebar from \"./component/Sidebar\";\r\nimport Tab from \"./component/Tab\";\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Relation from \"./component/Relation\";\r\nimport AddRelations from \"./component/AddRelations\";\r\nimport UserPanel from \"./component/UserPanel\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path='/(|home|relation|addRelations|userPanel)' component={Sidebar}/>\r\n                    <Route path='/home' component={Tab}/>\r\n                    <Route path='/relation' component={Relation}/>\r\n                    <Route path='/addRelations' component={AddRelations}/>\r\n                    <Route path='/userPanel' component={UserPanel}/>\r\n                    <Route path='/login' component={Login}/>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js",["75","76","77","78","79","80","81","82"],"import axios from \"axios\";\r\nimport '../css/Login.css';\r\nimport RegisterImage from '../img/register.svg'\r\nimport LoginImage from '../img/login.svg'\r\nimport React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst emailRegex = /\\S+@\\S+\\.\\S+/;\r\n\r\n\r\n\r\nconst shapeStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: '#f0f0f0', borderRadius: '55px', minWidth: '380px', width: '100%', margin: '10px 0', height: '55px',display: 'flex', fontFamily: \"Poppins\" }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected  }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled ? 'red' : \"#f0f0f0\",\r\n            marginTop: 0,\r\n            color: 'black',\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n            maxWidth: '380px',\r\n            width: '100%',\r\n        };\r\n    },\r\n\r\n};\r\n\r\nconst options = [\r\n    { value: 'customer', label: 'Customer' },\r\n    { value: 'supplier', label: 'Supplier' }\r\n];\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        email: {\r\n            fieldName: 'email',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validateEmail(),\r\n        },\r\n        password: {\r\n            fieldName: 'password',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validatePassword(),\r\n        },\r\n        repassword: {\r\n            fieldName: 'repassword',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validatePassword(),\r\n        },\r\n        role: {\r\n            fieldName: 'role',\r\n            value: '',\r\n            showError: false,\r\n        },\r\n        company: {\r\n            fieldName: 'company',\r\n            value: '',\r\n            showError: false,\r\n        },\r\n        loginResponse: {\r\n            fieldName: 'loginResponse',\r\n            response: null,\r\n        },\r\n        avatar: {\r\n            fieldName: 'avatar',\r\n            avatarImg: '',\r\n            avatarUserId: '',\r\n        },\r\n        isModalOpen: false,\r\n        signUpMode: false,\r\n        selectedOption:''\r\n    };\r\n\r\n    refresh = () => {\r\n        window.location.reload(false);\r\n    };\r\n\r\n    toggleIsModalOpen = () => {\r\n        const { isModalOpen } = this.state;\r\n        this.setState({ isModalOpen: !isModalOpen });\r\n    };\r\n\r\n    updateField = (fieldName, value) => {\r\n        const { state } = this;\r\n        state[fieldName].value = value;\r\n        this.setState(state);\r\n    };\r\n\r\n    validatePassword = () => {\r\n        const { password } = this.state;\r\n        password.showError = password.value.length < 6;\r\n        this.setState({ password });\r\n    };\r\n\r\n    validateEmail = () => {\r\n        const { email } = this.state;\r\n        email.showError = !emailRegex.test(email.value);\r\n        this.setState({ email });\r\n    };\r\n\r\n    areAllFieldsCorrect = () => {\r\n        const { state } = this;\r\n        const fields = Object.values(state);\r\n        for (let i = 0; i < fields.length - 1; i += 1) {\r\n            if (fields[i].showError) return false;\r\n        }\r\n        return true;\r\n    };\r\n    handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { state } = this;\r\n        Object.values(state)\r\n            .forEach((field) => {\r\n                if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                    //field.validate();\r\n                }\r\n            });\r\n        if (this.areAllFieldsCorrect()) {\r\n            delete state.isLoginError;\r\n            const data = {};\r\n            Object.keys(state)\r\n                .forEach((fieldName) => {\r\n                    data[fieldName] = state[fieldName].value;\r\n                });\r\n            axios\r\n                .post('http://localhost:8080/api/login', data\r\n                )\r\n                .then((response) => {\r\n                    localStorage.setItem('userId', response.data.userId);\r\n                    localStorage.setItem('role', response.data.role);\r\n                    if (response.data.role == 'supplier') {\r\n                        this.props.history.push('/home');\r\n                        console.log(\"supplier\")\r\n                    } else if (response.data.role == 'customer') {\r\n                        this.props.history.push('/home');\r\n                        console.log(\"customer\")\r\n                    } else  {\r\n                        console.log(\"chuj wie\");\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { state } = this;\r\n        Object.values(state)\r\n            .forEach((field) => {\r\n                if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                    //field.validate();\r\n                }\r\n            });\r\n\r\n        if (this.areAllFieldsCorrect()) {\r\n            delete state.isLoginError;\r\n            const data = {};\r\n            Object.keys(state)\r\n                .forEach((fieldName) => {\r\n                    data[fieldName] = state[fieldName].value;\r\n                });\r\n            axios\r\n                .post('http://localhost:8080/api/register', data\r\n                )\r\n                .then((response) => {\r\n                    localStorage.setItem('userId', response.data.userId);\r\n                    if (response.status == 200) {\r\n                        this.handleClick()\r\n                    }\r\n                })\r\n        }\r\n    };\r\n// onLoadedData = (data) => {\r\n//     this.props.onLoadedData({\r\n//         //name: data.name,\r\n//         phone: data.phone,\r\n//         email: data.email,\r\n//         userId: data.userId,\r\n//         imageUrl: data.imageUrl,\r\n//     });\r\n// };\r\n//\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(state => ({\r\n            signUpMode: !state.signUpMode\r\n        }));\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <div className={`login-container ${this.state.signUpMode ? 'sign-up-mode' : null }`}>\r\n                <div className=\"forms-login-container\">\r\n                    <div className=\"signin-signup\">\r\n\r\n                        <form action=\"#\" className=\"sign-in-form\">\r\n                            <h2 className=\"title\">Sign in</h2>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                                <input type=\"text\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\" value={this.state.email.value} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Login\" className=\"btn-login solid\" onClick={this.handleLogin}/>\r\n                        </form>\r\n                        <form action=\"#\" className=\"sign-up-form\">\r\n                            <h2 className=\"title\">Sign up</h2>\r\n                            <i className=\"fas fa-user\"></i>\r\n                            {/*<select defaultValue=\"select\" className=\"input-field\" onChange={(e) => this.updateField('company', e.target.value)}>*/}\r\n                            {/*    <option  hidden value=\"select\" disabled>Rola</option>*/}\r\n                            {/*    <option  data-id=\"supplier\">supplier</option>*/}\r\n                            {/*    <option  data-id=\"customer\">customer</option>*/}\r\n                            {/*    <></>*/}\r\n                            {/*</select>*/}\r\n                            <Select\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                                options={options}\r\n                                styles={shapeStyles}\r\n                            />\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                                <input type=\"text\" onChange={(e) => this.updateField('company', e.target.value)} placeholder=\"Company\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                                <input type=\"email\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('repassword', e.target.value)} placeholder=\"Repassword\"/>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn-login\" value=\"Sign up\" onClick={this.handleRegister}/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"panels-login-container\">\r\n                    <div className=\"panel left-panel\">\r\n                        <div className=\"content\">\r\n                            <h3>New here ?</h3>\r\n                            <p>\r\n                                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\r\n                                ex ratione. Aliquid!\r\n                            </p>\r\n                            <button className=\"btn-login transparent\" id=\"sign-in-btn-login\" onClick={this.handleClick}>\r\n                                Sign up\r\n                            </button>\r\n                        </div>\r\n                        <img className=\"image\"  src={LoginImage} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"panel right-panel\">\r\n                        <div className=\"content\">\r\n                            <h3>One of us ?</h3>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                                laboriosam ad deleniti.\r\n                            </p>\r\n                            <button className=\"btn-login transparent\" id=\"sign-in-btn-login\" onClick={this.handleClick}>\r\n                                Sign in\r\n                            </button>\r\n                        </div>\r\n                        <img src={RegisterImage}  className=\"image\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js",[],["83","84"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js",["85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js",["100","101","102","103","104","105","106"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js",["107","108","109"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"import React, {useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport {useSelector} from 'react-redux';\r\nimport Row from './rowRelation'\r\nimport '../css/Tab.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst classes = makeStyles();\r\n\r\n\r\nconst Relation = (props) => {\r\n\r\n    const [relations, setRelations] = useState([]);\r\n    const [isLoadnig, setIsLoadnig] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [count, setCount] = useState(100);\r\n    const [company, setCompany] = useState('');\r\n    const [baseNum, setBaseNum] = useState('');\r\n    const [cusNum, setCusNum] = useState('');\r\n    const [text, setText] = useState(false);\r\n    const width = useSelector((state => state))\r\n\r\n\r\n    const createData = (relationUsersId, creationDate, supplier, customer, active) => {\r\n        return {\r\n            relationUsersId,\r\n            creationDate,\r\n            supplier,\r\n            customer,\r\n            active\r\n        };\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage({page: newPage});\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const uploadDate = (props) => {\r\n        let tempArray = [];\r\n        props.forEach(data => {\r\n            let temp = createData(data.relationUsersId, data.creationDate, data.supplier.name, data.customer.name, data.active)\r\n            tempArray.push(temp)\r\n        })\r\n        setRelations(tempArray)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                uploadDate(response.data)\r\n            })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        console.log(width)\r\n    }, [width])\r\n\r\n    // React.useEffect(() => {\r\n    //     axios\r\n    //         //.get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${company}&baseRef=${baseNum}&cusNumber=${cusNum}&size=${rowsPerPage}&page=${page}`)\r\n    //         .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n    //         .then((response) => {\r\n    //             console.log(response)\r\n    //             if(response.status == 204)\r\n    //             {\r\n    //                 this.uploadDate([])\r\n    //             }\r\n    //             else\r\n    //                 this.uploadDate(response.data)\r\n    //         })\r\n    // }, [company, baseNum , cusNum, rowsPerPage, page])\r\n\r\n    React.useEffect(() => {\r\n        if (text == true) {\r\n            setText(false)\r\n            axios\r\n                .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                    uploadDate(response.data)\r\n                })\r\n        }\r\n        console.log(text)\r\n    }, [text])\r\n\r\n\r\n    // const updateField = (fieldName, value) => {\r\n    //     const { state } = this;\r\n    //     state[fieldName] = value;\r\n    //     this.setState(state);\r\n    // };\r\n    return (\r\n        <div className={`${width ? 'offset' : 'withoutOffset'}`}>\r\n            <div className= \"buttonContainer\">\r\n                <Link to = {\"/addRelations\"}>Dodaj firmę</Link>\r\n                <input type='text' placeholder='Firma' name='company' onChange={(e) => setCompany(e.target.valu)}/>\r\n            </div>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Data</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Firma</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Akcja</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {relations && relations.map((row) => (\r\n                            <Row key={row.name} row={row} text={(textContent) => setText(textContent)}/>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                component=\"div\"\r\n                count={count}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default Relation","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js",["125","126","127","128","129","130","131","132","133","134"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js",["135","136","137","138","139"],"import React, {useState} from 'react';\r\nimport Logo1 from './img/favicon1.ico'\r\nimport '../css/AddRelations.scss'\r\n\r\n\r\n\r\nconst AddRelations = (props) => {\r\n    const tab = [{\r\n        \"name\" : \"Company1\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company2\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company3\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company4\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company5\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company6\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company7\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company8\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company9\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company10\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company11\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company12\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company13\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company14\",\r\n        \"img\" : Logo1,\r\n    },{\r\n        \"name\" : \"Company15\",\r\n        \"img\" : Logo1,\r\n    }]\r\n\r\n    const [relations, setRelations] = useState([]);\r\n    const [iterator, setIterator] = useState([]);\r\n\r\n    // const splitter () => {\r\n    //     for (let i = 0; i < tab.length; i++){\r\n    //\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"containerRelations\">\r\n            <div className=\"rowRelations\">\r\n            {tab.map((company) => (\r\n\r\n                <div className=\"panelCompany\">\r\n                    <h3>HI</h3>\r\n                    <img src={company.img}/>\r\n                    <h2>{company.name}</h2>\r\n                </div>\r\n\r\n            ))}\r\n            {/*<div className=\"rowRelations\">*/}\r\n            {/*  <div className=\"panelCompany\">*/}\r\n            {/*        <img src={Logo1}/>*/}\r\n            {/*        <h2>Mayeryn</h2>*/}\r\n            {/*    </div><div className=\"panelCompany\">*/}\r\n            {/*        <img src={Logo1}/>*/}\r\n            {/*        <h2>Mayeryn</h2>*/}\r\n            {/*    </div><div className=\"panelCompany\">*/}\r\n            {/*        <img src={Logo1}/>*/}\r\n            {/*        <h2>Mayeryn</h2>*/}\r\n            {/*    </div>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default AddRelations","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js",["140","141"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\UserPanel.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":34,"nodeType":"148","messageId":"149","endLine":5,"endColumn":44},{"ruleId":"150","severity":1,"message":"151","line":119,"column":37,"nodeType":"152","messageId":"153","endLine":119,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":119,"column":75,"nodeType":"152","messageId":"153","endLine":119,"endColumn":77},{"ruleId":"150","severity":1,"message":"154","line":136,"column":44,"nodeType":"152","messageId":"153","endLine":136,"endColumn":46},{"ruleId":"150","severity":1,"message":"154","line":139,"column":51,"nodeType":"152","messageId":"153","endLine":139,"endColumn":53},{"ruleId":"150","severity":1,"message":"151","line":164,"column":37,"nodeType":"152","messageId":"153","endLine":164,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":164,"column":75,"nodeType":"152","messageId":"153","endLine":164,"endColumn":77},{"ruleId":"150","severity":1,"message":"154","line":181,"column":41,"nodeType":"152","messageId":"153","endLine":181,"endColumn":43},{"ruleId":"146","severity":1,"message":"155","line":224,"column":17,"nodeType":"148","messageId":"149","endLine":224,"endColumn":18},{"ruleId":"142","replacedBy":"156"},{"ruleId":"144","replacedBy":"157"},{"ruleId":"146","severity":1,"message":"158","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":14},{"ruleId":"146","severity":1,"message":"159","line":19,"column":12,"nodeType":"148","messageId":"149","endLine":19,"endColumn":21},{"ruleId":"146","severity":1,"message":"160","line":19,"column":23,"nodeType":"148","messageId":"149","endLine":19,"endColumn":35},{"ruleId":"146","severity":1,"message":"161","line":20,"column":12,"nodeType":"148","messageId":"149","endLine":20,"endColumn":24},{"ruleId":"146","severity":1,"message":"162","line":20,"column":26,"nodeType":"148","messageId":"149","endLine":20,"endColumn":41},{"ruleId":"146","severity":1,"message":"163","line":22,"column":12,"nodeType":"148","messageId":"149","endLine":22,"endColumn":18},{"ruleId":"146","severity":1,"message":"164","line":23,"column":12,"nodeType":"148","messageId":"149","endLine":23,"endColumn":21},{"ruleId":"146","severity":1,"message":"165","line":23,"column":23,"nodeType":"148","messageId":"149","endLine":23,"endColumn":35},{"ruleId":"146","severity":1,"message":"166","line":24,"column":12,"nodeType":"148","messageId":"149","endLine":24,"endColumn":23},{"ruleId":"146","severity":1,"message":"167","line":24,"column":25,"nodeType":"148","messageId":"149","endLine":24,"endColumn":39},{"ruleId":"146","severity":1,"message":"168","line":95,"column":11,"nodeType":"148","messageId":"149","endLine":95,"endColumn":22},{"ruleId":"169","severity":1,"message":"170","line":132,"column":25,"nodeType":"171","endLine":132,"endColumn":50},{"ruleId":"172","severity":1,"message":"173","line":133,"column":29,"nodeType":"171","endLine":133,"endColumn":73},{"ruleId":"169","severity":1,"message":"170","line":138,"column":33,"nodeType":"171","endLine":138,"endColumn":180},{"ruleId":"150","severity":1,"message":"154","line":138,"column":87,"nodeType":"152","messageId":"153","endLine":138,"endColumn":89},{"ruleId":"146","severity":1,"message":"174","line":26,"column":7,"nodeType":"148","messageId":"149","endLine":26,"endColumn":21},{"ruleId":"146","severity":1,"message":"175","line":34,"column":7,"nodeType":"148","messageId":"149","endLine":34,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":92,"column":13,"nodeType":"178","endLine":92,"endColumn":23},{"ruleId":"150","severity":1,"message":"154","line":97,"column":40,"nodeType":"152","messageId":"153","endLine":97,"endColumn":42},{"ruleId":"150","severity":1,"message":"154","line":125,"column":80,"nodeType":"152","messageId":"153","endLine":125,"endColumn":82},{"ruleId":"150","severity":1,"message":"154","line":126,"column":93,"nodeType":"152","messageId":"153","endLine":126,"endColumn":95},{"ruleId":"150","severity":1,"message":"154","line":127,"column":93,"nodeType":"152","messageId":"153","endLine":127,"endColumn":95},{"ruleId":"150","severity":1,"message":"154","line":113,"column":64,"nodeType":"152","messageId":"153","endLine":113,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":196,"column":17,"nodeType":"181","endLine":196,"endColumn":36},{"ruleId":"179","severity":1,"message":"180","line":197,"column":17,"nodeType":"181","endLine":197,"endColumn":34},{"ruleId":"146","severity":1,"message":"174","line":28,"column":7,"nodeType":"148","messageId":"149","endLine":28,"endColumn":21},{"ruleId":"146","severity":1,"message":"175","line":36,"column":7,"nodeType":"148","messageId":"149","endLine":36,"endColumn":14},{"ruleId":"146","severity":1,"message":"182","line":42,"column":12,"nodeType":"148","messageId":"149","endLine":42,"endColumn":21},{"ruleId":"146","severity":1,"message":"183","line":42,"column":23,"nodeType":"148","messageId":"149","endLine":42,"endColumn":35},{"ruleId":"146","severity":1,"message":"184","line":43,"column":12,"nodeType":"148","messageId":"149","endLine":43,"endColumn":19},{"ruleId":"146","severity":1,"message":"185","line":43,"column":21,"nodeType":"148","messageId":"149","endLine":43,"endColumn":31},{"ruleId":"146","severity":1,"message":"186","line":46,"column":19,"nodeType":"148","messageId":"149","endLine":46,"endColumn":27},{"ruleId":"146","severity":1,"message":"187","line":47,"column":12,"nodeType":"148","messageId":"149","endLine":47,"endColumn":19},{"ruleId":"146","severity":1,"message":"188","line":48,"column":12,"nodeType":"148","messageId":"149","endLine":48,"endColumn":19},{"ruleId":"146","severity":1,"message":"189","line":48,"column":21,"nodeType":"148","messageId":"149","endLine":48,"endColumn":31},{"ruleId":"146","severity":1,"message":"190","line":49,"column":12,"nodeType":"148","messageId":"149","endLine":49,"endColumn":18},{"ruleId":"146","severity":1,"message":"191","line":49,"column":20,"nodeType":"148","messageId":"149","endLine":49,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":89,"column":8,"nodeType":"194","endLine":89,"endColumn":10,"suggestions":"195"},{"ruleId":"150","severity":1,"message":"154","line":111,"column":18,"nodeType":"152","messageId":"153","endLine":111,"endColumn":20},{"ruleId":"192","severity":1,"message":"193","line":121,"column":8,"nodeType":"194","endLine":121,"endColumn":14,"suggestions":"196"},{"ruleId":"146","severity":1,"message":"197","line":5,"column":21,"nodeType":"148","messageId":"149","endLine":5,"endColumn":31},{"ruleId":"146","severity":1,"message":"198","line":8,"column":9,"nodeType":"148","messageId":"149","endLine":8,"endColumn":25},{"ruleId":"146","severity":1,"message":"199","line":8,"column":27,"nodeType":"148","messageId":"149","endLine":8,"endColumn":33},{"ruleId":"146","severity":1,"message":"200","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":13},{"ruleId":"146","severity":1,"message":"201","line":45,"column":18,"nodeType":"148","messageId":"149","endLine":45,"endColumn":25},{"ruleId":"146","severity":1,"message":"202","line":46,"column":12,"nodeType":"148","messageId":"149","endLine":46,"endColumn":18},{"ruleId":"146","severity":1,"message":"203","line":46,"column":20,"nodeType":"148","messageId":"149","endLine":46,"endColumn":29},{"ruleId":"146","severity":1,"message":"204","line":47,"column":12,"nodeType":"148","messageId":"149","endLine":47,"endColumn":19},{"ruleId":"146","severity":1,"message":"205","line":48,"column":18,"nodeType":"148","messageId":"149","endLine":48,"endColumn":25},{"ruleId":"150","severity":1,"message":"154","line":78,"column":66,"nodeType":"152","messageId":"153","endLine":78,"endColumn":68},{"ruleId":"146","severity":1,"message":"206","line":55,"column":12,"nodeType":"148","messageId":"149","endLine":55,"endColumn":21},{"ruleId":"146","severity":1,"message":"207","line":55,"column":23,"nodeType":"148","messageId":"149","endLine":55,"endColumn":35},{"ruleId":"146","severity":1,"message":"208","line":56,"column":12,"nodeType":"148","messageId":"149","endLine":56,"endColumn":20},{"ruleId":"146","severity":1,"message":"209","line":56,"column":22,"nodeType":"148","messageId":"149","endLine":56,"endColumn":33},{"ruleId":"172","severity":1,"message":"173","line":71,"column":21,"nodeType":"171","endLine":71,"endColumn":45},{"ruleId":"146","severity":1,"message":"210","line":1,"column":16,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"211","line":48,"column":8,"nodeType":"194","endLine":48,"endColumn":24,"suggestions":"212"},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'t' is assigned a value but never used.",["213"],["214"],"'Avatar' is defined but never used.","'showCount' is assigned a value but never used.","'setShowCount' is assigned a value but never used.","'messageCount' is assigned a value but never used.","'setMessageCount' is assigned a value but never used.","'target' is assigned a value but never used.","'raedIndex' is assigned a value but never used.","'setReadIndex' is assigned a value but never used.","'sortedByKey' is assigned a value but never used.","'setSortedByKey' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'StyledTableRow' is assigned a value but never used.","'classes' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isLoadnig' is assigned a value but never used.","'setIsLoadnig' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'setCount' is assigned a value but never used.","'company' is assigned a value but never used.","'baseNum' is assigned a value but never used.","'setBaseNum' is assigned a value but never used.","'cusNum' is assigned a value but never used.","'setCusNum' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'uploadDate'. Either include it or remove the dependency array.","ArrayExpression",["215"],["216"],"'withStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Modal' is defined but never used.","'setOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'details' is assigned a value but never used.","'setText' is assigned a value but never used.","'relations' is assigned a value but never used.","'setRelations' is assigned a value but never used.","'iterator' is assigned a value but never used.","'setIterator' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook React.useEffect has missing dependencies: 'props.codeBars', 'props.currency', 'props.discountPrcnt', 'props.id', 'props.itemCode', 'props.lineNet', 'props.lineTotal', 'props.lineVat', 'props.onTheWay', 'props.price', 'props.quantity', 'props.scheduledShipDate', and 'props.vatPrcnt'. Either include them or remove the dependency array. If 'setId' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.",["217"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [uploadDate]",{"range":"224","text":"225"},"Update the dependencies array to be: [text, uploadDate]",{"range":"226","text":"227"},"Update the dependencies array to be: [props.codeBars, props.currency, props.discountPrcnt, props.id, props.itemCode, props.itemName, props.lineNet, props.lineTotal, props.lineVat, props.onTheWay, props.price, props.quantity, props.scheduledShipDate, props.vatPrcnt]",{"range":"228","text":"229"},[2871,2873],"[uploadDate]",[4153,4159],"[text, uploadDate]",[1885,1901],"[props.codeBars, props.currency, props.discountPrcnt, props.id, props.itemCode, props.itemName, props.lineNet, props.lineTotal, props.lineVat, props.onTheWay, props.price, props.quantity, props.scheduledShipDate, props.vatPrcnt]"]