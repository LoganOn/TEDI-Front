[{"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js":"1","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js":"2","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js":"3","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js":"4","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js":"5","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js":"6","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js":"7","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js":"8","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js":"9","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js":"10","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js":"11","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js":"12","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js":"13","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js":"14","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js":"15","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\UserPanel.js":"16","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\NotifyMe.js":"17","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddOrder.js":"18","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Items.js":"19","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowItems.js":"20","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddDetails.js":"21"},{"size":751,"mtime":1612715187992,"results":"22","hashOfConfig":"23"},{"size":1134,"mtime":1614409741310,"results":"24","hashOfConfig":"23"},{"size":11816,"mtime":1614009414187,"results":"25","hashOfConfig":"23"},{"size":462,"mtime":1612715074384,"results":"26","hashOfConfig":"23"},{"size":5690,"mtime":1614544590965,"results":"27","hashOfConfig":"23"},{"size":772,"mtime":1614409489955,"results":"28","hashOfConfig":"23"},{"size":7893,"mtime":1614539720839,"results":"29","hashOfConfig":"23"},{"size":11971,"mtime":1614541681467,"results":"30","hashOfConfig":"23"},{"size":265,"mtime":1612715187993,"results":"31","hashOfConfig":"23"},{"size":119,"mtime":1612715187990,"results":"32","hashOfConfig":"23"},{"size":6099,"mtime":1614542171254,"results":"33","hashOfConfig":"23"},{"size":3490,"mtime":1614025332874,"results":"34","hashOfConfig":"23"},{"size":973,"mtime":1613600455107,"results":"35","hashOfConfig":"23"},{"size":2585,"mtime":1614411585027,"results":"36","hashOfConfig":"23"},{"size":6201,"mtime":1614023185352,"results":"37","hashOfConfig":"23"},{"size":2435,"mtime":1614012284512,"results":"38","hashOfConfig":"23"},{"size":9408,"mtime":1614545962653,"results":"39","hashOfConfig":"23"},{"size":6130,"mtime":1614540076441,"results":"40","hashOfConfig":"23"},{"size":6380,"mtime":1614411990139,"results":"41","hashOfConfig":"23"},{"size":3836,"mtime":1614410872536,"results":"42","hashOfConfig":"23"},{"size":6217,"mtime":1614542031455,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7dmyh3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js",[],["100","101"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js",["102"],"import React, {Component} from \"react\";\r\nimport Login from \"./component/Login\";\r\nimport Sidebar from \"./component/Sidebar\";\r\nimport Tab from \"./component/Tab\";\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Relation from \"./component/Relation\";\r\nimport AddRelations from \"./component/AddRelations\";\r\nimport UserPanel from \"./component/UserPanel\";\r\nimport Items from \"./component/Items\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route path='/(||home|relation|addRelations|userPanel|items)' component={Sidebar}/>\r\n                    <Route path='/home' component={Tab}/>\r\n                    <Route path='/relation' component={Relation}/>\r\n                    <Route path='/addRelations' component={AddRelations}/>\r\n                    <Route path='/userPanel' component={UserPanel}/>\r\n                    <Route path='/login' component={Login}/>\r\n                    <Route path='/items' component={Items}/>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js",["103","104","105","106","107","108","109","110"],"import axios from \"axios\";\r\nimport '../css/Login.css';\r\nimport RegisterImage from '../img/register.svg'\r\nimport LoginImage from '../img/login.svg'\r\nimport React, {Component} from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst emailRegex = /\\S+@\\S+\\.\\S+/;\r\n\r\n\r\n\r\nconst shapeStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: '#f0f0f0', borderRadius: '55px', minWidth: '380px', width: '100%', margin: '10px 0', height: '55px',display: 'flex', fontFamily: \"Poppins\" }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected  }) => {\r\n        return {\r\n            ...styles,\r\n            backgroundColor: isDisabled ? 'red' : \"#f0f0f0\",\r\n            marginTop: 0,\r\n            color: 'black',\r\n            cursor: isDisabled ? 'not-allowed' : 'default',\r\n            maxWidth: '380px',\r\n            width: '100%',\r\n        };\r\n    },\r\n\r\n};\r\n\r\nconst options = [\r\n    { value: 'customer', label: 'Customer' },\r\n    { value: 'supplier', label: 'Supplier' }\r\n];\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        email: {\r\n            fieldName: 'email',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validateEmail(),\r\n        },\r\n        password: {\r\n            fieldName: 'password',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validatePassword(),\r\n        },\r\n        repassword: {\r\n            fieldName: 'repassword',\r\n            value: '',\r\n            showError: false,\r\n            validate: () => this.validatePassword(),\r\n        },\r\n        role: {\r\n            fieldName: 'role',\r\n            value: '',\r\n            showError: false,\r\n        },\r\n        company: {\r\n            fieldName: 'company',\r\n            value: '',\r\n            showError: false,\r\n        },\r\n        loginResponse: {\r\n            fieldName: 'loginResponse',\r\n            response: null,\r\n        },\r\n        avatar: {\r\n            fieldName: 'avatar',\r\n            avatarImg: '',\r\n            avatarUserId: '',\r\n        },\r\n        isModalOpen: false,\r\n        signUpMode: false,\r\n        selectedOption:''\r\n    };\r\n\r\n    refresh = () => {\r\n        window.location.reload(false);\r\n    };\r\n\r\n    toggleIsModalOpen = () => {\r\n        const { isModalOpen } = this.state;\r\n        this.setState({ isModalOpen: !isModalOpen });\r\n    };\r\n\r\n    updateField = (fieldName, value) => {\r\n        const { state } = this;\r\n        state[fieldName].value = value;\r\n        this.setState(state);\r\n    };\r\n\r\n    validatePassword = () => {\r\n        const { password } = this.state;\r\n        password.showError = password.value.length < 6;\r\n        this.setState({ password });\r\n    };\r\n\r\n    validateEmail = () => {\r\n        const { email } = this.state;\r\n        email.showError = !emailRegex.test(email.value);\r\n        this.setState({ email });\r\n    };\r\n\r\n    areAllFieldsCorrect = () => {\r\n        const { state } = this;\r\n        const fields = Object.values(state);\r\n        for (let i = 0; i < fields.length - 1; i += 1) {\r\n            if (fields[i].showError) return false;\r\n        }\r\n        return true;\r\n    };\r\n    handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { state } = this;\r\n        Object.values(state)\r\n            .forEach((field) => {\r\n                if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                    //field.validate();\r\n                }\r\n            });\r\n        if (this.areAllFieldsCorrect()) {\r\n            delete state.isLoginError;\r\n            const data = {};\r\n            Object.keys(state)\r\n                .forEach((fieldName) => {\r\n                    data[fieldName] = state[fieldName].value;\r\n                });\r\n            axios\r\n                .post('http://localhost:8080/api/login', data\r\n                )\r\n                .then((response) => {\r\n                    localStorage.setItem('userId', response.data.userId);\r\n                    localStorage.setItem('role', response.data.role);\r\n                    if (response.data.role == 'supplier') {\r\n                        this.props.history.push('/home');\r\n                        console.log(\"supplier\")\r\n                    } else if (response.data.role == 'customer') {\r\n                        this.props.history.push('/home');\r\n                        console.log(\"customer\")\r\n                    } else  {\r\n                        console.log(\"chuj wie\");\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n    handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { state } = this;\r\n        Object.values(state)\r\n            .forEach((field) => {\r\n                if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                    //field.validate();\r\n                }\r\n            });\r\n\r\n        if (this.areAllFieldsCorrect()) {\r\n            delete state.isLoginError;\r\n            const data = {};\r\n            Object.keys(state)\r\n                .forEach((fieldName) => {\r\n                    data[fieldName] = state[fieldName].value;\r\n                });\r\n            axios\r\n                .post('http://localhost:8080/api/register', data\r\n                )\r\n                .then((response) => {\r\n                    localStorage.setItem('userId', response.data.userId);\r\n                    if (response.status == 200) {\r\n                        this.handleClick()\r\n                    }\r\n                })\r\n        }\r\n    };\r\n// onLoadedData = (data) => {\r\n//     this.props.onLoadedData({\r\n//         //name: data.name,\r\n//         phone: data.phone,\r\n//         email: data.email,\r\n//         userId: data.userId,\r\n//         imageUrl: data.imageUrl,\r\n//     });\r\n// };\r\n//\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(state => ({\r\n            signUpMode: !state.signUpMode\r\n        }));\r\n    }\r\n\r\n    handleChange = (selectedOption) => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <div className={`login-container ${this.state.signUpMode ? 'sign-up-mode' : null }`}>\r\n                <div className=\"forms-login-container\">\r\n                    <div className=\"signin-signup\">\r\n\r\n                        <form action=\"#\" className=\"sign-in-form\">\r\n                            <h2 className=\"title\">Logowanie</h2>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                                <input type=\"text\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\" value={this.state.email.value} />\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Hasło\"/>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Zaloguj\" className=\"btn-login solid\" onClick={this.handleLogin}/>\r\n                        </form>\r\n                        <form action=\"#\" className=\"sign-up-form\">\r\n                            <h2 className=\"title\">Rejestracja</h2>\r\n                            <i className=\"fas fa-user\"></i>\r\n                            {/*<select defaultValue=\"select\" className=\"input-field\" onChange={(e) => this.updateField('company', e.target.value)}>*/}\r\n                            {/*    <option  hidden value=\"select\" disabled>Rola</option>*/}\r\n                            {/*    <option  data-id=\"supplier\">supplier</option>*/}\r\n                            {/*    <option  data-id=\"customer\">customer</option>*/}\r\n                            {/*    <></>*/}\r\n                            {/*</select>*/}\r\n                            <Select\r\n                                value={this.state.value}\r\n                                onChange={this.handleChange}\r\n                                options={options}\r\n                                styles={shapeStyles}\r\n                            />\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-user\"></i>\r\n                                <input type=\"text\" onChange={(e) => this.updateField('company', e.target.value)} placeholder=\"Nazwa firmy\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                                <input type=\"email\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Hasło\"/>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"fas fa-lock\"></i>\r\n                                <input type=\"password\" onChange={(e) => this.updateField('repassword', e.target.value)} placeholder=\"Powtórz hasło\"/>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn-login\" value=\"Zarejestruj\" onClick={this.handleRegister}/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"panels-login-container\">\r\n                    <div className=\"panel left-panel\">\r\n                        <div className=\"content\">\r\n                            <h3>Nie masz konta ? </h3>\r\n                            <p>\r\n                                {/*Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,*/}\r\n                                {/*ex ratione. Aliquid!*/}\r\n                            </p>\r\n                            <button className=\"btn-login transparent\" id=\"sign-in-btn-login\" onClick={this.handleClick}>\r\n                                Rejestracja\r\n                            </button>\r\n                        </div>\r\n                        <img className=\"image\"  src={LoginImage} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"panel right-panel\">\r\n                        <div className=\"content\">\r\n                            <h3>Masz już konto ?</h3>\r\n                            <p>\r\n                                {/*Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum*/}\r\n                                {/*laboriosam ad deleniti.*/}\r\n                            </p>\r\n                            <button className=\"btn-login transparent\" id=\"sign-in-btn-login\" onClick={this.handleClick}>\r\n                                Logowanie\r\n                            </button>\r\n                        </div>\r\n                        <img src={RegisterImage}  className=\"image\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js",[],["111","112"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js",["131","132","133","134","135"],"import React from 'react';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport { AiFillBook } from \"react-icons/ai\";\r\nimport { AiFillDatabase } from \"react-icons/ai\";\r\nimport { AiOutlineUser } from \"react-icons/ai\";\r\n\r\nexport const SidebarData = [\r\n    {\r\n        title:\"Zamówienia\",\r\n        icon:<AiFillBook />,\r\n        link:\"/home\",\r\n    },\r\n    {\r\n        title:\"Relacje\",\r\n        icon:<AiOutlineUser />,\r\n        link:\"/relation\",\r\n    },\r\n    {\r\n        title:\"Towary\",\r\n        icon:<AiFillDatabase />,\r\n        link:\"/items\",\r\n    }\r\n];","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js",["136","137","138","139","140","141","142","143"],"import React, {Component, useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux';\r\nimport Row from './Row'\r\nimport '../css/Tab.css'\r\nimport AddOrder from \"./AddOrder\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst classes = makeStyles();\r\n\r\nclass Tab extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delivery:[],\r\n            isLoadnig:false,\r\n            isError:false,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            count: 1,\r\n            company:'',\r\n            baseNum: '',\r\n            cusNum: '',\r\n            cancelToken: undefined,\r\n            refresh: false,\r\n            isModalOpen:false,\r\n        }\r\n    }\r\n\r\n    createData(deliveryOrderId, creationDate, supplier, customer, baseRef, numberOrderCustomer, docNet, docVatSum, docTotal, description) {\r\n        return {\r\n            deliveryOrderId,\r\n            creationDate,\r\n            supplier,\r\n            customer,\r\n            baseRef,\r\n            numberOrderCustomer,\r\n            docNet,\r\n            docVatSum,\r\n            docTotal,\r\n            description,\r\n        };\r\n    }\r\n\r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({page: newPage});\r\n    };\r\n\r\n    handleChangeRowsPerPage = (event) => {\r\n        this.setState({rowsPerPage : parseInt(event.target.value, 10), page: 0});\r\n    };\r\n\r\n    async componentDidMount(){\r\n        this.setState({isLoading: true})\r\n        axios\r\n            .get(`http://localhost:8080/api/delivery/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${this.state.company}&baseRef=${this.state.baseNum}&cusNumber=${this.state.cusNum}`)\r\n            .then((response) => {\r\n                this.setState({count : response.data.count})\r\n                this.uploadDate(response.data.deliveryOrders)\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {company, baseNum, cusNum, rowsPerPage, page} = this.state\r\n        if (company !== prevState.company || baseNum !== prevState.baseNum || cusNum !== prevState.cusNum || rowsPerPage !== prevState.rowsPerPage || page !== prevState.page){\r\n            if (typeof this.state.cancelToken != typeof undefined) {\r\n                this.state.cancelToken.cancel(\"Operation canceled due to new request.\");\r\n            }\r\n            this.state.cancelToken = axios.CancelToken.source();\r\n            axios\r\n                .get(`http://localhost:8080/api/delivery/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${company}&baseRef=${baseNum}&cusNumber=${cusNum}&size=${rowsPerPage}&page=${page}`, { cancelToken: this.state.cancelToken.token })\r\n                .then((response) => {\r\n                    if(response.status == 204)\r\n                    {\r\n                        this.uploadDate([])\r\n                    }\r\n                    else\r\n                        this.setState({count: response.data.count})\r\n                    this.uploadDate(response.data.deliveryOrders)\r\n                })\r\n        }\r\n    }\r\n\r\n    updateField = (fieldName, value) => {\r\n        const { state } = this;\r\n        state[fieldName] = value;\r\n        this.setState(state);\r\n    };\r\n\r\n     closeModel = () => {\r\n        this.setState({isModalOpen: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${this.props.width ? 'offset' : 'withoutOffset'}`}>\r\n                <input className=\"input-searching-table\" type='text' placeholder='Firma' name='company' onChange={(e) => this.setState({company : e.target.value})}/>\r\n                <input className=\"input-searching-table\" type='text' placeholder='Numer dostawcy' name='baseRef' onChange={(e) => this.setState({baseNum : e.target.value})}/>\r\n                <input className=\"input-searching-table\" type='text' placeholder='Numer klienta' name='cusNumber' onChange={(e) => this.setState({cusNum : e.target.value})}/>\r\n                <button className=\"order-container-buttons\" onClick={() => {this.add()}}>Dodaj zamówienie</button>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell />\r\n                                <StyledTableCell>Data</StyledTableCell>\r\n                                <StyledTableCell>{localStorage.getItem(\"role\") == \"customer\" ? 'Dostawca' : 'Klient' }</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{localStorage.getItem(\"role\") == \"customer\" ? 'Numer dostawcy' : 'Numer zamówienia'}</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">{localStorage.getItem(\"role\") == \"customer\" ? 'Numer zamówienia' : 'Numer klienta'}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;netto</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;Vat</StyledTableCell>\r\n                                <StyledTableCell align=\"left\">Opis</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {this.state.delivery && this.state.delivery.map((row) => (\r\n                                <Row key={row.name} row={row} />\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={this.state.count}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onPageChange={this.handleChangePage}\r\n                    onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n                />\r\n                <AddOrder\r\n                    isModalOpen={this.state.isModalOpen}\r\n                    closeModel={this.closeModel}\r\n                    //refreshDetails={refreshDetails}\r\n                    // refreshDetails={(refresh) => setRefresh(refresh)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    add(){\r\n        this.setState({isModalOpen: true})\r\n    }\r\n    uploadDate(props) {\r\n        let tempArray = [];\r\n        props.forEach(data => {\r\n            let temp = this.createData(data.deliveryOrderId, data.creationDate, data.supplier.name, data.customer.name, data.baseRef, data.numberOrderCustomer, data.docNet, data.docVatSum, data.docTotal, data.description)\r\n            tempArray.push(temp)\r\n        })\r\n        this.setState({delivery : tempArray})\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        width: state\r\n    }\r\n}\r\nexport default connect (mapStateToProps)(Tab)","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Row.js",["144","145","146","147"],"import React, {useState} from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Moment from 'moment';\r\nimport EditDetails from \"./EditDetails\";\r\nimport ShowMoreText from 'react-show-more-text';\r\nimport '../css/Tab.css'\r\nimport AddDetails from \"./AddDetails\";\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        supplier: PropTypes.number.isRequired,\r\n        baseRef: PropTypes.number.isRequired,\r\n        numberOrderCustomer: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        date: PropTypes.string.isRequired,\r\n        docNet: PropTypes.number.isRequired,\r\n        docVatSum: PropTypes.number.isRequired,\r\n        docTotal: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nfunction Row(props) {\r\n    const {row} = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [details, setDetails] = useState([]);\r\n    const classes = useRowStyles();\r\n    const [itemName, setItemName] = useState()\r\n    const [id, setId] = useState()\r\n    const [itemCode, setItemCode] = useState()\r\n    const [quantity, setQuantity] = useState(0)\r\n    const [codeBars, setCodeBars] = useState()\r\n    const [lineNet, setLineNet] = useState(0)\r\n    const [price, setPrice] = useState(0)\r\n    const [currency, setCurrency] = useState()\r\n    const [lineTotal, setLineTotal] = useState(0)\r\n    const [lineVat, setLineVat] = useState(0)\r\n    const [discountPrcnt, setDiscountPrcnt] = useState()\r\n    const [vatPrcnt, setVatPrcnt] = useState()\r\n    const [onTheWay, setOnTheWay] = useState()\r\n    const [scheduledShipDate, setScheduledShipDate] = useState()\r\n    const [refresh, setRefresh] = useState(false)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isModalOpen1, setIsModalOpen1] = useState(false);\r\n    const handleShow = () => {\r\n        if (!open) {\r\n            axios\r\n                .get(`http://localhost:8080/api/details/${row.deliveryOrderId}`)\r\n                .then((response) => {\r\n                    setDetails(response.data)\r\n                })\r\n        }\r\n        setOpen(!open)\r\n    }\r\n\r\n    //TODO do poprawy valuenet\r\n    const edit = (detail) => {\r\n        setId(detail.id);\r\n        setItemCode(detail.itemCode);\r\n        setItemName(detail.itemName);\r\n        setCodeBars(detail.codeBars);\r\n        setQuantity(detail.quantity);\r\n        setPrice(detail.price);\r\n        setCurrency(detail.currency);\r\n        setLineTotal(detail.lineTotal);\r\n        setLineNet(detail.lineNet);\r\n        setLineVat(detail.lineVat);\r\n        setDiscountPrcnt(detail.discountPrcnt);\r\n        setVatPrcnt(detail.vatPrcnt);\r\n        setOnTheWay(details.onTheWay);\r\n        setScheduledShipDate(detail.scheduledShipDate);\r\n        setIsModalOpen(true);\r\n    }\r\n\r\n    const add = () => {\r\n\r\n        setIsModalOpen1(true);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (refresh === true) {\r\n            axios\r\n                .get(`http://localhost:8080/api/details/${row.deliveryOrderId}`)\r\n                .then((response) => {\r\n                    setDetails(response.data)\r\n                })\r\n            setRefresh(false)\r\n        }\r\n    }, [refresh])\r\n\r\n    const closeModel = () => {\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    const closeModel1 = () => {\r\n        setIsModalOpen1(false)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => handleShow()}>\r\n                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {Moment(row.creationDate).format('DD-MM-YYYY hh:mm:ss')}\r\n                </TableCell>\r\n                <TableCell\r\n                    align=\"left\">{localStorage.getItem(\"role\") == \"customer\" ? row.supplier : row.customer}</TableCell>\r\n                <TableCell align=\"left\">{row.baseRef}</TableCell>\r\n                <TableCell align=\"left\">{row.numberOrderCustomer}</TableCell>\r\n                <TableCell align=\"right\">{row.docTotal}</TableCell>\r\n                <TableCell align=\"right\">{row.docNet}</TableCell>\r\n                <TableCell align=\"right\">{row.docVatSum}</TableCell>\r\n                <TableCell align=\"left\">\r\n                    <ShowMoreText\r\n                        lines={1}\r\n                        more='Rozwiń'\r\n                        less='Zwiń'\r\n                        className='content-css'\r\n                        anchorClass='my-anchor-css-class'\r\n                        width={280}>{row.description}</ShowMoreText></TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={9}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={0}>\r\n                            <div className=\"details-container\">\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Szczegóły\r\n                            </Typography>\r\n                            <button className=\"details-container-buttons\" onClick={() => add()}>Dodaj</button>\r\n                            </div>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        {/*<TableCell align=\"left\">Pow</TableCell>*/}\r\n                                        <TableCell align=\"left\">Nr&nbsp;kat</TableCell>\r\n                                        <TableCell align=\"left\">Nazwa</TableCell>\r\n                                        <TableCell align=\"left\">EAN</TableCell>\r\n                                        <TableCell align=\"right\">Ilość</TableCell>\r\n                                        <TableCell align=\"right\">Cena</TableCell>\r\n                                        <TableCell align=\"left\">Waluta</TableCell>\r\n                                        <TableCell align=\"right\">Wartość</TableCell>\r\n                                        <TableCell align=\"right\">Wartość netto</TableCell>\r\n                                        <TableCell align=\"right\">Wartość Vat</TableCell>\r\n                                        <TableCell align=\"right\">Vat %</TableCell>\r\n                                        <TableCell align=\"right\">Rabat</TableCell>\r\n                                        <TableCell align=\"left\">Czas&nbsp;dostawy</TableCell>\r\n                                        <TableCell align=\"left\">Status</TableCell>\r\n                                        <TableCell>Data modyfikacji</TableCell>\r\n                                        <TableCell align=\"center\">Akcja</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {details && details.map((historyRow) => (\r\n                                        <TableRow key={historyRow.date}>\r\n                                            {/*<TableCell align=\"center\"> <input type=\"checkbox\"/></TableCell>*/}\r\n                                            <TableCell align=\"left\">{historyRow.itemCode}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.itemName}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.codeBars}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.quantity}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.price}</TableCell>\r\n                                            <TableCell align=\"left\">{historyRow.currency}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.lineTotal}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.lineNet}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.lineVat}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.vatPrcnt}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.discountPrcnt}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.scheduledShipDate}</TableCell>\r\n                                            <TableCell\r\n                                                align=\"left\">{historyRow.onTheWay ? \"W drodze\" : \"Nie wysłany\"}</TableCell>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {Moment(historyRow.modifyDate).format('DD-MM-YYYY hh:mm:ss')}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <div className=\"details-container-buttons-row\">\r\n                                                <button className=\"details-container-buttons-row-edit\" onClick={() => edit(historyRow)}>Edytuj</button>\r\n                                                <button className=\"details-container-buttons-row-delete\" onClick={() => edit(historyRow)}>Usuń</button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n            <EditDetails\r\n                itemName={itemName}\r\n                codeBars={codeBars}\r\n                lineNet={lineNet}\r\n                id={id}\r\n                itemCode={itemCode}\r\n                quantity={quantity}\r\n                codeBars={codeBars}\r\n                lineNet={lineNet}\r\n                price={price}\r\n                currency={currency}\r\n                lineTotal={lineTotal}\r\n                lineVat={lineVat}\r\n                discountPrcnt={discountPrcnt}\r\n                vatPrcnt={vatPrcnt}\r\n                onTheWay={onTheWay}\r\n                scheduledShipDate={scheduledShipDate}\r\n                isModalOpen={isModalOpen}\r\n                closeModel={closeModel}\r\n                // refreshDetails={refreshDetails}\r\n                refreshDetails={(refresh) => setRefresh(refresh)}\r\n            />\r\n            <AddDetails\r\n                id={row.deliveryOrderId}\r\n                isModalOpen={isModalOpen1}\r\n                closeModel={closeModel1}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Row","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\reducer\\ChangeWidthReducer.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\action\\ChangeWidthAction.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Relation.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowRelation.js",["165","166","167","168","169","170","171","172","173","174"],"import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport {FormControlLabel, Switch} from \"@material-ui/core\";\r\nimport '../css/Relation.css'\r\nimport Moment from \"moment\";\r\nimport Confirmation from \"./Confirmation\";\r\nimport Modal from \"react-responsive-modal\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nRowRelation.propTypes = {\r\n    row: PropTypes.shape({\r\n        supplier: PropTypes.number.isRequired,\r\n        baseRef: PropTypes.number.isRequired,\r\n        numberOrderCustomer: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        date: PropTypes.string.isRequired,\r\n        docNet: PropTypes.number.isRequired,\r\n        docVatSum: PropTypes.number.isRequired,\r\n        docTotal: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nfunction RowRelation(props) {\r\n    const {row} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [toggle, setToggle] = React.useState(false);\r\n    const [details, setDetails] = React.useState([]);\r\n    const [text, setText] = React.useState(props.text);\r\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    const closeModel = () => {\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const deleteRelation = () => {\r\n        axios\r\n            .delete(`http://localhost:8080/api/relations/${row.relationUsersId}`)\r\n            .then((response) => {\r\n                setDetails(response.data)\r\n                props.text(!text)\r\n            })\r\n    }\r\n    React.useEffect(() => {\r\n    }, [isModalOpen])\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {Moment(row.creationDate).format('DD-MM-YYYY hh:mm:ss')}\r\n                </TableCell>\r\n                <TableCell\r\n                    align=\"center\">{localStorage.getItem(\"role\") == \"customer\" ? row.supplier : row.customer}</TableCell>\r\n                {/*<TableCell align=\"center\">{row.active}</TableCell>*/}\r\n                <TableCell align=\"center\">\r\n                    <button className=\"grid-rows-relations-button-cancel\" onClick={openModal}>Usuń</button>\r\n                    {/*<Switch onClick={toggler}></Switch>*/}\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Confirmation\r\n                isModalOpen={isModalOpen}\r\n                deleteRelation={deleteRelation}\r\n                closeModel={closeModel}\r\n            >\r\n            </Confirmation>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default RowRelation","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Confirmation.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddRelations.js",["175","176","177","178","179","180","181"],"import React, {useState} from 'react';\r\nimport Logo1 from './img/favicon1.ico'\r\nimport Femax from './img/Femax.png'\r\nimport Tece from './img/Tece.jpg'\r\nimport Purmo from './img/Purmo.png'\r\nimport Grohe from './img/Grohe.png'\r\nimport '../css/AddRelations.scss'\r\nimport axios from \"axios\";\r\n\r\n\r\nconst AddRelations = (props) => {\r\n    const [relations, setRelations] = useState([]);\r\n    const [iterator, setIterator] = useState([]);\r\n    const [check, setCheck] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/without/${localStorage.getItem(\"userId\")}`)\r\n            .then((response) => {\r\n                setRelations(response.data)\r\n            })\r\n    },[check]);\r\n\r\n\r\n    const addRelation = (userId) =>{\r\n        console.log(userId)\r\n        axios\r\n            .post(`http://localhost:8080/api/relations`,\r\n                {\r\n                    supplierId:localStorage.getItem(\"userId\"),\r\n                    customerId:userId,\r\n                }\r\n                )\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setCheck(!check)\r\n            })\r\n        //setRelations(response.data)\r\n    }\r\n\r\n    return (\r\n        <div className=\"containerRelations\">\r\n             <div className=\"rowRelations\" >\r\n                 {/*<div className=\"panelCompany\">*/}\r\n                 {/*    <img className=\"panelCompany-img\" src={Femax}/>*/}\r\n                 {/*    <h2>Femax</h2>*/}\r\n                 {/*</div>*/}\r\n                 {/*<div className=\"panelCompany\" >*/}\r\n                 {/*    <img className=\"panelCompany-img\" src={Tece}/>*/}\r\n                 {/*    <h2>Tece</h2>*/}\r\n                 {/*</div>*/}\r\n                 {/*<div className=\"panelCompany\">*/}\r\n                 {/*    <img className=\"panelCompany-img\" src={Purmo}/>*/}\r\n                 {/*    <h2>Purmo</h2>*/}\r\n                 {/*</div>*/}\r\n                 {/*<div className=\"panelCompany\" >*/}\r\n                 {/*    <img className=\"panelCompany-img\" src={Grohe}/>*/}\r\n                 {/*    <h2>Grohe</h2>*/}\r\n                 {/*</div>*/}\r\n                {relations && relations.map((company) => (\r\n                    <div className=\"panelCompany\" onClick={() => addRelation(company.userId)}>\r\n                        <img className=\"panelCompany-img\" src={Femax}/>\r\n                        <h2>{company.name}</h2>\r\n                    </div>\r\n\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default AddRelations","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\EditDetails.js",["182","183","184","185"],"import React, {useEffect, useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport '../css/EditDetails.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst modalDefaultStyle = {\r\n    modal:\r\n        {\r\n            borderRadius: '12px',\r\n        }\r\n}\r\n\r\nconst EditDetails = (props) => {\r\n\r\n    const [id, setId] = useState(props.id)\r\n    const [itemName, setItemName] = useState(props.itemName)\r\n    const [itemCode, setItemCode] = useState(props.itemCode)\r\n    const [quantity, setQuantity] = useState(props.quantity)\r\n    const [codeBars, setCodeBars] = useState(props.codeBars)\r\n    const [lineNet, setLineNet] = useState(props.lineNet)\r\n    const [price, setPrice] = useState(props.price)\r\n    const [currency, setCurrency] = useState(props.currency)\r\n    const [lineTotal, setLineTotal] = useState(props.lineTotal)\r\n    const [lineVat, setLineVat] = useState(props.lineVat)\r\n    const [discountPrcnt, setDiscountPrcnt] = useState(props.discountPrcnt)\r\n    const [vatPrcnt, setVatPrcnt] = useState(props.vatPrcnt)\r\n    const [onTheWay, setOnTheWay] = useState(props.onTheWay)\r\n    const [refresh, setRefresh] = useState(props.refreshDetails)\r\n    const [scheduledShipDate, setScheduledShipDate] = useState(props.scheduledShipDate)\r\n\r\n    React.useEffect(() => {\r\n        if (props.itemName) {\r\n            setId(props.id)\r\n            setItemName(props.itemName);\r\n            setItemCode(props.itemCode);\r\n            setQuantity(props.quantity);\r\n            setCodeBars(props.codeBars);\r\n            setLineNet(props.lineNet);\r\n            setPrice(props.price);\r\n            setCurrency(props.currency);\r\n            setLineTotal(props.lineTotal);\r\n            setLineVat(props.lineVat);\r\n            setDiscountPrcnt(props.discountPrcnt);\r\n            setVatPrcnt(props.vatPrcnt);\r\n            setOnTheWay(props.onTheWay ? \"W drodze\" : \"Nie wysłany\");\r\n            setScheduledShipDate(props.scheduledShipDate);\r\n        }\r\n    }, [props.itemName])\r\n\r\n    const submit = () => {\r\n        axios\r\n            .patch(`http://localhost:8080/api/details/${id}`,\r\n                {\r\n                    itemName,\r\n                    codeBars,\r\n                    lineNet:Number (lineNet),\r\n                    itemCode,\r\n                    quantity:Number(quantity),\r\n                    price:Number(price),\r\n                    currency,\r\n                    lineTotal:Number(lineTotal),\r\n                    lineVat:Number(lineVat),\r\n                    discountPrcnt,\r\n                    vatPrcnt:Number(vatPrcnt),\r\n                    // onTheWay,\r\n                    scheduledShipDate,\r\n                })\r\n            .then((response) => {\r\n                props.closeModel()\r\n                props.refreshDetails(true)\r\n            })\r\n    }\r\n    return (\r\n        <Modal\r\n            animationDuration={50}\r\n            showCloseIcon={false}\r\n            styles={modalDefaultStyle}\r\n            open={props.isModalOpen}\r\n            onClose={props.closeModel}\r\n            center>\r\n            <div className=\"grid-container-details\">\r\n                <label className=\"grid-rows-details\">Indeks</label>\r\n                <input className=\"grid-rows-details-input\" value={itemCode}\r\n                       onChange={(e) => setItemCode(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Nazwa</label>\r\n                <input className=\"grid-rows-details-input\" value={itemName}\r\n                       onChange={(e) => setItemName(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">EAN</label>\r\n                <input className=\"grid-rows-details-input\" value={codeBars}\r\n                       onChange={(e) => setCodeBars(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Ilość</label>\r\n                <input className=\"grid-rows-details-input\" value={quantity}\r\n                       onChange={(e) => setQuantity(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Cena</label>\r\n                <input className=\"grid-rows-details-input\" value={price} onChange={(e) => setPrice(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Waluta</label>\r\n                <input className=\"grid-rows-details-input\" value={currency}\r\n                       onChange={(e) => setCurrency(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Wartość</label>\r\n                <input className=\"grid-rows-details-input\" value={lineTotal}\r\n                       onChange={(e) => setLineTotal(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Wartość netto</label>\r\n                <input className=\"grid-rows-details-input\" value={lineNet}\r\n                       onChange={(e) => setLineNet(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Wartość Vat</label>\r\n                <input className=\"grid-rows-details-input\" value={lineVat}\r\n                       onChange={(e) => setLineVat(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Vat</label>\r\n                <input className=\"grid-rows-details-input\" value={vatPrcnt}\r\n                       onChange={(e) => setVatPrcnt(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Rabat</label>\r\n                <input className=\"grid-rows-details-input\" value={discountPrcnt}\r\n                       onChange={(e) => setDiscountPrcnt(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Czas dostawy</label>\r\n                <input className=\"grid-rows-details-input\" value={scheduledShipDate}\r\n                       onChange={(e) => setScheduledShipDate(e.target.value)}/>\r\n                <label className=\"grid-rows-details\">Status</label>\r\n                <input className=\"grid-rows-details-input\" value={onTheWay}\r\n                       onChange={(e) => setOnTheWay(e.target.value)}/>\r\n                <button className=\"grid-rows-details-button-add\" onClick={submit}>Zapisz</button>\r\n                <button className=\"grid-rows-details-button-cancel\" onClick={props.closeModel}>Anuluj</button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default EditDetails;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\UserPanel.js",["186","187"],"import React, {Component} from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport axios from \"axios\";\r\nimport '../css/UserPanel.css'\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\n\r\nclass UserPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: \"\",\r\n                phone: \"\",\r\n                password: \"\",\r\n                repassword: \"\",\r\n                notification: false,\r\n            },\r\n            checked: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(checked) {\r\n        this.setState({checked});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({isLoading: true})\r\n        axios\r\n            .get(`http://localhost:8080/api/users/${localStorage.getItem(\"userId\")}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.loadData(response.data)\r\n            })\r\n    }\r\n\r\n    loadData(data) {\r\n        this.setState({user:{phone: data.phone, email:data.email}});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"user\">\r\n            <div className=\"box-user\">\r\n                <div className=\"grid-container-user\">\r\n                    <label className=\"grid-rows\">Email</label>\r\n                    <input className=\"grid-rows-input\" value={this.state.user.email} onChange={event => this.setState({user:{email: event.target.value}})}/>\r\n                    <label className=\"grid-rows\">Telefon</label>\r\n                    <input className=\"grid-rows-input\" value={this.state.user.phone}/>\r\n                    <label className=\"grid-rows\">Hasło</label>\r\n                    <input className=\"grid-rows-input\" type=\"password\"/>\r\n                    <label className=\"grid-rows\">Powtórz hasło</label>\r\n                    <input className=\"grid-rows-input\" type=\"password\"/>\r\n                    <label className=\"grid-rows\">Notification</label>\r\n                    <Switch className=\"grid-rows\" onChange={this.handleChange} checked={this.state.checked}/>\r\n                </div>\r\n                <button type=\"submit\"  className=\"btn-customer-panel\" onChange={this.handleChange} checked={this.state.checked}>Zapisz</button>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPanel;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\NotifyMe.js",["188","189","190","191","192","193"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddOrder.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, {useEffect, useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport '../css/AddOrder.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst modalDefaultStyle = {\r\n    modal:\r\n        {\r\n            borderRadius: '12px',\r\n        }\r\n}\r\n\r\nconst AddOrder = (props) => {\r\n\r\n    const [id, setId] = useState(props.id)\r\n    const [deliverOrderID, setDeliverOrderID] = useState(10)\r\n    const [detailsDeliveryOrders, setDetailsDeliveryOrders] = useState([])\r\n    const [itemName, setItemName] = useState(props.itemName)\r\n    const [itemCode, setItemCode] = useState(props.itemCode)\r\n    const [quantity, setQuantity] = useState(props.quantity)\r\n    const [codeBars, setCodeBars] = useState(props.codeBars)\r\n    const [lineNet, setLineNet] = useState(props.lineNet)\r\n    const [price, setPrice] = useState(props.price)\r\n    const [currency, setCurrency] = useState(props.currency)\r\n    const [lineTotal, setLineTotal] = useState(props.lineTotal)\r\n    const [lineVat, setLineVat] = useState(props.lineVat)\r\n    const [discountPrcnt, setDiscountPrcnt] = useState(props.discountPrcnt)\r\n    const [vatPrcnt, setVatPrcnt] = useState(props.vatPrcnt)\r\n    const [onTheWay, setOnTheWay] = useState(props.onTheWay)\r\n    const [refresh, setRefresh] = useState(props.refreshDetails)\r\n    const [scheduledShipDate, setScheduledShipDate] = useState(props.scheduledShipDate)\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if (props.itemName) {\r\n            // deliverOrderID,\r\n            // detailsDeliveryOrders:{\r\n                setId(props.id)\r\n                setItemName(props.itemName);\r\n                setItemCode(props.itemCode);\r\n                setQuantity(props.quantity);\r\n                setCodeBars(props.codeBars);\r\n                setLineNet(props.lineNet);\r\n                setPrice(props.price);\r\n                setCurrency(props.currency);\r\n                setLineTotal(props.lineTotal);\r\n                setLineVat(props.lineVat);\r\n                setDiscountPrcnt(props.discountPrcnt);\r\n                setVatPrcnt(props.vatPrcnt);\r\n                setOnTheWay(props.onTheWay ? \"W drodze\" : \"Nie wysłany\");\r\n                setScheduledShipDate(props.scheduledShipDate);\r\n            }\r\n        // }\r\n    }, [props.itemName])\r\n\r\n\r\n    const submit = () => {\r\n        axios\r\n            .post(`http://localhost:8080/api/delivery`,\r\n                {\r\n                // {      baseRef,\r\n                //     numberOrderCustomer,\r\n                //     docStatus,\r\n                //\r\n                //     supplier : { 'userId' : userid},\r\n                //     lineTotal:Number(lineTotal),\r\n                //     lineVat:Number(lineVat),\r\n                //     discountPrcnt,\r\n                //     vatPrcnt:Number(vatPrcnt),\r\n                //     // onTheWay,\r\n                //     scheduledShipDate,\r\n                    \"baseRef\": \"ZAM-2020-20022\",\r\n                    \"numberOrderCustomer\": \"202012101234\",\r\n                    \"docStatus\": \"C\",\r\n                    \"supplier\": {\r\n                        \"userId\": 2\r\n                    },\r\n                    \"customer\": {\r\n                        \"userId\": 1\r\n                    },\r\n                    \"docTotal\": 6000.0,\r\n                    \"docNet\": 4878.05,\r\n                    \"docVatSum\": 1121.95,\r\n                    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam sit amet dui justo. Nullam et elit velit. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Curabitur ac imperdiet odio. Praesent sed fringilla lorem. Nulla facilisi. Cras eget eleifend mauris, eget euismod massa. Vivamus ultricies eu elit a fringilla. In mattis, ipsum et accumsan egestas, sem erat lobortis justo, et ullamcorper eros tortor eget ipsum.\",\r\n                    \"detailsDeliveryOrdersList\": [\r\n                    ]\r\n\r\n                })\r\n            .then((response) => {\r\n              // closeModel()\r\n                 props.closeModel()\r\n                 props.refreshDetails(true)\r\n            })\r\n    }\r\n    return (\r\n        <Modal\r\n            animationDuration={50}\r\n            showCloseIcon={false}\r\n            styles={modalDefaultStyle}\r\n            open={props.isModalOpen}\r\n            onClose={props.closeModel}\r\n            center>\r\n            <div className=\"grid-container-order\">\r\n                <label className=\"grid-rows-order\">Klient</label>\r\n                <input className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setItemCode(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Numer zamówienia</label>\r\n                <input className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setItemName(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Numer klienta</label>\r\n                <input className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setCodeBars(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Wartość</label>\r\n                <input className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setQuantity(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Wartość netto</label>\r\n                <input className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setLineNet(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Wartość Vat</label>\r\n                <input className=\"grid-rows-order-input\" value={lineVat}\r\n                       onChange={(e) => setLineVat(e.target.value)}/>\r\n                <label className=\"grid-rows-order\">Opis</label>\r\n                <textarea className=\"grid-rows-order-input\"\r\n                       onChange={(e) => setOnTheWay(e.target.value)}/>\r\n                <button className=\"grid-rows-order-button-add\" onClick={submit}>Zapisz</button>\r\n                <button className=\"grid-rows-order-button-cancel\" onClick={props.closeModel}>Anuluj</button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default AddOrder;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Items.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, {useState} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\nimport {useSelector} from 'react-redux';\r\nimport Row from './rowItems'\r\nimport '../css/Tab.css'\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst classes = makeStyles();\r\n\r\n\r\nconst Items = (props) => {\r\n\r\n    const [relations, setRelations] = useState([]);\r\n    const [isLoadnig, setIsLoadnig] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [count, setCount] = useState(100);\r\n    const [company, setCompany] = useState('');\r\n    const [baseNum, setBaseNum] = useState('');\r\n    const [cusNum, setCusNum] = useState('');\r\n    const [text, setText] = useState(false);\r\n    const width = useSelector((state => state))\r\n\r\n\r\n    const createData = (itemId, itemCode, itemName, codeBars, price, currency, vatPrcnt, vatGroup, active, availability) => {\r\n        return {\r\n            itemId,\r\n            itemCode,\r\n            itemName,\r\n            codeBars,\r\n            price,\r\n            currency,\r\n            vatPrcnt,\r\n            vatGroup,\r\n            active,\r\n            availability\r\n        };\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage({page: newPage});\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const uploadDate = (props) => {\r\n        let tempArray = [];\r\n        props.forEach(data => {\r\n            let temp = createData(data.itemId, data.itemCode, data.itemName, data.codeBars, data.price, data.currency, data.vatPrcnt, data.vatGroup, data.active, data.availability)\r\n            tempArray.push(temp)\r\n        })\r\n        setRelations(tempArray)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:8080/api/items`)\r\n            .then((response) => {\r\n                uploadDate(response.data)\r\n                console.log(response)\r\n            })\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n    }, [width])\r\n\r\n    // React.useEffect(() => {\r\n    //     axios\r\n    //         //.get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}/?name=${company}&baseRef=${baseNum}&cusNumber=${cusNum}&size=${rowsPerPage}&page=${page}`)\r\n    //         .get(`http://localhost:8080/api/relations/${localStorage.getItem(\"role\")}/${localStorage.getItem(\"userId\")}`)\r\n    //         .then((response) => {\r\n    //             console.log(response)\r\n    //             if(response.status == 204)\r\n    //             {\r\n    //                 this.uploadDate([])\r\n    //             }\r\n    //             else\r\n    //                 this.uploadDate(response.data)\r\n    //         })\r\n    // }, [company, baseNum , cusNum, rowsPerPage, page])\r\n\r\n    React.useEffect(() => {\r\n        if (text == true) {\r\n            setText(false)\r\n            axios\r\n                .get(`http://localhost:8080/api/items`)\r\n                .then((response) => {\r\n                    uploadDate(response.data)\r\n                })\r\n        }\r\n    }, [text])\r\n\r\n\r\n    // const updateField = (fieldName, value) => {\r\n    //     const { state } = this;\r\n    //     state[fieldName] = value;\r\n    //     this.setState(state);\r\n    // };\r\n    return (\r\n        <div className={`${width ? 'offset' : 'withoutOffset'}`}>\r\n            {/*<div className=\"buttonContainer\">*/}\r\n            {/*    /!*<div className=\"buttonContainer-link\">*!/*/}\r\n            {/*    /!*    <a to={\"/addRelations\"}>Dodaj firmę</a>*!/*/}\r\n            {/*    /!*    <a  className=\"buttonContainer-link\" href={\"/addRelations\"}>Dodaj firmę</a>*!/*/}\r\n            {/*    /!*</div>*!/*/}\r\n            {/*    <input className=\"buttonContainer-input\" type='text' placeholder='Firma' name='company'*/}\r\n            {/*           onChange={(e) => setCompany(e.target.valu)}/>*/}\r\n            {/*</div>*/}\r\n            <TableContainer component={Paper} >\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>Indeks</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Nazwa</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">EAN</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Cena</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Waluta</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Vat</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Dostępność</StyledTableCell>\r\n                            <StyledTableCell align=\"center\">Akcje</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {relations && relations.map((row) => (\r\n                            <Row key={row.name} row={row} text={(textContent) => setText(textContent)}/>\r\n                        ))}\r\n                    </TableBody>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, 100]}\r\n                component=\"div\"\r\n                count={3}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default Items","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\rowItems.js",["234","235","236","237","238","239","240"],"import React from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport '../css/Relation.css'\r\nimport Moment from \"moment\";\r\nimport Confirmation from \"./Confirmation\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nRowItems.propTypes = {\r\n    row: PropTypes.shape({\r\n        supplier: PropTypes.number.isRequired,\r\n        baseRef: PropTypes.number.isRequired,\r\n        numberOrderCustomer: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        date: PropTypes.string.isRequired,\r\n        docNet: PropTypes.number.isRequired,\r\n        docVatSum: PropTypes.number.isRequired,\r\n        docTotal: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\n\r\nfunction RowItems(props) {\r\n    const {row} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [toggle, setToggle] = React.useState(false);\r\n    const [details, setDetails] = React.useState([]);\r\n    const [text, setText] = React.useState(props.text);\r\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    const closeModel = () => {\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const deleteRelation = () => {\r\n        axios\r\n            .delete(`http://localhost:8080/api/items/${row.itemId}`)\r\n            .then((response) => {\r\n                setDetails(response.data)\r\n                props.text(!text)\r\n            })\r\n    }\r\n    React.useEffect(() => {\r\n    }, [isModalOpen])\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                {/*<TableCell component=\"th\" scope=\"row\">*/}\r\n                {/*    {Moment(row.creationDate).format('DD-MM-YYYY hh:mm:ss')}*/}\r\n                {/*</TableCell>*/}\r\n                <TableCell align=\"center\">{row.itemCode}</TableCell>\r\n                <TableCell align=\"center\">{row.itemName}</TableCell>\r\n                <TableCell align=\"center\">{row.codeBars}</TableCell>\r\n                <TableCell align=\"center\">{row.price}</TableCell>\r\n                <TableCell align=\"center\">{row.currency}</TableCell>\r\n                <TableCell align=\"center\">{row.vatPrcnt}</TableCell>\r\n                <TableCell align=\"center\">{row.availability}</TableCell>\r\n                {/*<TableCell align=\"center\">{row.active}</TableCell>*/}\r\n                <TableCell align=\"center\">\r\n                    <button className=\"details-container-buttons-row-edit\"  onClick={openModal}>Edytuj</button>\r\n                    <button className=\"details-container-buttons-row-delete\" onClick={openModal}>Usuń</button>\r\n                    {/*<Switch onClick={toggler}></Switch>*/}\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n            <Confirmation\r\n                isModalOpen={isModalOpen}\r\n                deleteRelation={deleteRelation}\r\n                closeModel={closeModel}\r\n            >\r\n            </Confirmation>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default RowItems","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\AddDetails.js",["241","242","243","244"],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":5,"column":34,"nodeType":"251","messageId":"252","endLine":5,"endColumn":44},{"ruleId":"253","severity":1,"message":"254","line":119,"column":37,"nodeType":"255","messageId":"256","endLine":119,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":119,"column":75,"nodeType":"255","messageId":"256","endLine":119,"endColumn":77},{"ruleId":"253","severity":1,"message":"257","line":136,"column":44,"nodeType":"255","messageId":"256","endLine":136,"endColumn":46},{"ruleId":"253","severity":1,"message":"257","line":139,"column":51,"nodeType":"255","messageId":"256","endLine":139,"endColumn":53},{"ruleId":"253","severity":1,"message":"254","line":164,"column":37,"nodeType":"255","messageId":"256","endLine":164,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":164,"column":75,"nodeType":"255","messageId":"256","endLine":164,"endColumn":77},{"ruleId":"253","severity":1,"message":"257","line":181,"column":41,"nodeType":"255","messageId":"256","endLine":181,"endColumn":43},{"ruleId":"249","severity":1,"message":"258","line":224,"column":17,"nodeType":"251","messageId":"252","endLine":224,"endColumn":18},{"ruleId":"245","replacedBy":"259"},{"ruleId":"247","replacedBy":"260"},{"ruleId":"249","severity":1,"message":"261","line":6,"column":8,"nodeType":"251","messageId":"252","endLine":6,"endColumn":14},{"ruleId":"249","severity":1,"message":"262","line":15,"column":10,"nodeType":"251","messageId":"252","endLine":15,"endColumn":14},{"ruleId":"249","severity":1,"message":"263","line":21,"column":12,"nodeType":"251","messageId":"252","endLine":21,"endColumn":21},{"ruleId":"249","severity":1,"message":"264","line":21,"column":23,"nodeType":"251","messageId":"252","endLine":21,"endColumn":35},{"ruleId":"249","severity":1,"message":"265","line":22,"column":12,"nodeType":"251","messageId":"252","endLine":22,"endColumn":24},{"ruleId":"249","severity":1,"message":"266","line":22,"column":26,"nodeType":"251","messageId":"252","endLine":22,"endColumn":41},{"ruleId":"249","severity":1,"message":"267","line":24,"column":12,"nodeType":"251","messageId":"252","endLine":24,"endColumn":18},{"ruleId":"249","severity":1,"message":"268","line":25,"column":12,"nodeType":"251","messageId":"252","endLine":25,"endColumn":21},{"ruleId":"249","severity":1,"message":"269","line":25,"column":23,"nodeType":"251","messageId":"252","endLine":25,"endColumn":35},{"ruleId":"249","severity":1,"message":"270","line":26,"column":12,"nodeType":"251","messageId":"252","endLine":26,"endColumn":23},{"ruleId":"249","severity":1,"message":"271","line":26,"column":25,"nodeType":"251","messageId":"252","endLine":26,"endColumn":39},{"ruleId":"272","severity":1,"message":"273","line":31,"column":11,"nodeType":"274","endLine":31,"endColumn":20},{"ruleId":"249","severity":1,"message":"275","line":69,"column":11,"nodeType":"251","messageId":"252","endLine":69,"endColumn":29},{"ruleId":"249","severity":1,"message":"276","line":77,"column":11,"nodeType":"251","messageId":"252","endLine":77,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":116,"column":29,"nodeType":"279","endLine":116,"endColumn":54},{"ruleId":"280","severity":1,"message":"281","line":117,"column":33,"nodeType":"279","endLine":117,"endColumn":77},{"ruleId":"277","severity":1,"message":"278","line":122,"column":37,"nodeType":"279","endLine":125,"endColumn":40},{"ruleId":"253","severity":1,"message":"257","line":122,"column":91,"nodeType":"255","messageId":"256","endLine":122,"endColumn":93},{"ruleId":"249","severity":1,"message":"282","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":16},{"ruleId":"249","severity":1,"message":"283","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":16},{"ruleId":"249","severity":1,"message":"284","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":22},{"ruleId":"249","severity":1,"message":"285","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":21},{"ruleId":"249","severity":1,"message":"286","line":6,"column":8,"nodeType":"251","messageId":"252","endLine":6,"endColumn":17},{"ruleId":"249","severity":1,"message":"287","line":1,"column":27,"nodeType":"251","messageId":"252","endLine":1,"endColumn":35},{"ruleId":"249","severity":1,"message":"288","line":27,"column":7,"nodeType":"251","messageId":"252","endLine":27,"endColumn":21},{"ruleId":"249","severity":1,"message":"289","line":35,"column":7,"nodeType":"251","messageId":"252","endLine":35,"endColumn":14},{"ruleId":"290","severity":1,"message":"291","line":95,"column":13,"nodeType":"292","endLine":95,"endColumn":23},{"ruleId":"253","severity":1,"message":"257","line":99,"column":40,"nodeType":"255","messageId":"256","endLine":99,"endColumn":42},{"ruleId":"253","severity":1,"message":"257","line":133,"column":80,"nodeType":"255","messageId":"256","endLine":133,"endColumn":82},{"ruleId":"253","severity":1,"message":"257","line":134,"column":93,"nodeType":"255","messageId":"256","endLine":134,"endColumn":95},{"ruleId":"253","severity":1,"message":"257","line":135,"column":93,"nodeType":"255","messageId":"256","endLine":135,"endColumn":95},{"ruleId":"272","severity":1,"message":"293","line":116,"column":8,"nodeType":"294","endLine":116,"endColumn":17,"suggestions":"295"},{"ruleId":"253","severity":1,"message":"257","line":137,"column":64,"nodeType":"255","messageId":"256","endLine":137,"endColumn":66},{"ruleId":"296","severity":1,"message":"297","line":225,"column":17,"nodeType":"298","endLine":225,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":226,"column":17,"nodeType":"298","endLine":226,"endColumn":34},{"ruleId":"249","severity":1,"message":"262","line":15,"column":9,"nodeType":"251","messageId":"252","endLine":15,"endColumn":13},{"ruleId":"249","severity":1,"message":"288","line":28,"column":7,"nodeType":"251","messageId":"252","endLine":28,"endColumn":21},{"ruleId":"249","severity":1,"message":"289","line":36,"column":7,"nodeType":"251","messageId":"252","endLine":36,"endColumn":14},{"ruleId":"249","severity":1,"message":"299","line":42,"column":12,"nodeType":"251","messageId":"252","endLine":42,"endColumn":21},{"ruleId":"249","severity":1,"message":"300","line":42,"column":23,"nodeType":"251","messageId":"252","endLine":42,"endColumn":35},{"ruleId":"249","severity":1,"message":"301","line":43,"column":12,"nodeType":"251","messageId":"252","endLine":43,"endColumn":19},{"ruleId":"249","severity":1,"message":"302","line":43,"column":21,"nodeType":"251","messageId":"252","endLine":43,"endColumn":31},{"ruleId":"249","severity":1,"message":"303","line":46,"column":12,"nodeType":"251","messageId":"252","endLine":46,"endColumn":17},{"ruleId":"249","severity":1,"message":"304","line":46,"column":19,"nodeType":"251","messageId":"252","endLine":46,"endColumn":27},{"ruleId":"249","severity":1,"message":"305","line":47,"column":12,"nodeType":"251","messageId":"252","endLine":47,"endColumn":19},{"ruleId":"249","severity":1,"message":"306","line":48,"column":12,"nodeType":"251","messageId":"252","endLine":48,"endColumn":19},{"ruleId":"249","severity":1,"message":"307","line":48,"column":21,"nodeType":"251","messageId":"252","endLine":48,"endColumn":31},{"ruleId":"249","severity":1,"message":"308","line":49,"column":12,"nodeType":"251","messageId":"252","endLine":49,"endColumn":18},{"ruleId":"249","severity":1,"message":"309","line":49,"column":20,"nodeType":"251","messageId":"252","endLine":49,"endColumn":29},{"ruleId":"272","severity":1,"message":"310","line":90,"column":8,"nodeType":"294","endLine":90,"endColumn":10,"suggestions":"311"},{"ruleId":"253","severity":1,"message":"257","line":111,"column":18,"nodeType":"255","messageId":"256","endLine":111,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":119,"column":8,"nodeType":"294","endLine":119,"endColumn":14,"suggestions":"312"},{"ruleId":"249","severity":1,"message":"313","line":5,"column":21,"nodeType":"251","messageId":"252","endLine":5,"endColumn":31},{"ruleId":"249","severity":1,"message":"314","line":8,"column":9,"nodeType":"251","messageId":"252","endLine":8,"endColumn":25},{"ruleId":"249","severity":1,"message":"315","line":8,"column":27,"nodeType":"251","messageId":"252","endLine":8,"endColumn":33},{"ruleId":"249","severity":1,"message":"316","line":12,"column":8,"nodeType":"251","messageId":"252","endLine":12,"endColumn":13},{"ruleId":"249","severity":1,"message":"317","line":45,"column":18,"nodeType":"251","messageId":"252","endLine":45,"endColumn":25},{"ruleId":"249","severity":1,"message":"318","line":46,"column":12,"nodeType":"251","messageId":"252","endLine":46,"endColumn":18},{"ruleId":"249","severity":1,"message":"319","line":46,"column":20,"nodeType":"251","messageId":"252","endLine":46,"endColumn":29},{"ruleId":"249","severity":1,"message":"320","line":47,"column":12,"nodeType":"251","messageId":"252","endLine":47,"endColumn":19},{"ruleId":"249","severity":1,"message":"321","line":48,"column":18,"nodeType":"251","messageId":"252","endLine":48,"endColumn":25},{"ruleId":"253","severity":1,"message":"257","line":77,"column":66,"nodeType":"255","messageId":"256","endLine":77,"endColumn":68},{"ruleId":"249","severity":1,"message":"322","line":2,"column":8,"nodeType":"251","messageId":"252","endLine":2,"endColumn":13},{"ruleId":"249","severity":1,"message":"323","line":4,"column":8,"nodeType":"251","messageId":"252","endLine":4,"endColumn":12},{"ruleId":"249","severity":1,"message":"324","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":13},{"ruleId":"249","severity":1,"message":"325","line":6,"column":8,"nodeType":"251","messageId":"252","endLine":6,"endColumn":13},{"ruleId":"249","severity":1,"message":"326","line":13,"column":12,"nodeType":"251","messageId":"252","endLine":13,"endColumn":20},{"ruleId":"249","severity":1,"message":"327","line":13,"column":22,"nodeType":"251","messageId":"252","endLine":13,"endColumn":33},{"ruleId":"280","severity":1,"message":"281","line":62,"column":25,"nodeType":"279","endLine":62,"endColumn":72},{"ruleId":"249","severity":1,"message":"328","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"329","line":29,"column":12,"nodeType":"251","messageId":"252","endLine":29,"endColumn":19},{"ruleId":"249","severity":1,"message":"330","line":29,"column":21,"nodeType":"251","messageId":"252","endLine":29,"endColumn":31},{"ruleId":"272","severity":1,"message":"331","line":49,"column":8,"nodeType":"294","endLine":49,"endColumn":24,"suggestions":"332"},{"ruleId":"249","severity":1,"message":"333","line":5,"column":8,"nodeType":"251","messageId":"252","endLine":5,"endColumn":22},{"ruleId":"249","severity":1,"message":"334","line":6,"column":8,"nodeType":"251","messageId":"252","endLine":6,"endColumn":16},{"ruleId":"249","severity":1,"message":"335","line":12,"column":16,"nodeType":"251","messageId":"252","endLine":12,"endColumn":23},{"ruleId":"249","severity":1,"message":"336","line":36,"column":11,"nodeType":"251","messageId":"252","endLine":36,"endColumn":18},{"ruleId":"249","severity":1,"message":"337","line":37,"column":11,"nodeType":"251","messageId":"252","endLine":37,"endColumn":19},{"ruleId":"249","severity":1,"message":"338","line":43,"column":11,"nodeType":"251","messageId":"252","endLine":43,"endColumn":21},{"ruleId":"272","severity":1,"message":"339","line":91,"column":8,"nodeType":"294","endLine":91,"endColumn":14,"suggestions":"340"},{"ruleId":"249","severity":1,"message":"341","line":100,"column":11,"nodeType":"251","messageId":"252","endLine":100,"endColumn":21},{"ruleId":"249","severity":1,"message":"328","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"342","line":16,"column":12,"nodeType":"251","messageId":"252","endLine":16,"endColumn":14},{"ruleId":"249","severity":1,"message":"343","line":17,"column":12,"nodeType":"251","messageId":"252","endLine":17,"endColumn":26},{"ruleId":"249","severity":1,"message":"344","line":17,"column":28,"nodeType":"251","messageId":"252","endLine":17,"endColumn":45},{"ruleId":"249","severity":1,"message":"345","line":18,"column":12,"nodeType":"251","messageId":"252","endLine":18,"endColumn":33},{"ruleId":"249","severity":1,"message":"346","line":18,"column":35,"nodeType":"251","messageId":"252","endLine":18,"endColumn":59},{"ruleId":"249","severity":1,"message":"347","line":19,"column":12,"nodeType":"251","messageId":"252","endLine":19,"endColumn":20},{"ruleId":"249","severity":1,"message":"348","line":20,"column":12,"nodeType":"251","messageId":"252","endLine":20,"endColumn":20},{"ruleId":"249","severity":1,"message":"349","line":21,"column":12,"nodeType":"251","messageId":"252","endLine":21,"endColumn":20},{"ruleId":"249","severity":1,"message":"350","line":22,"column":12,"nodeType":"251","messageId":"252","endLine":22,"endColumn":20},{"ruleId":"249","severity":1,"message":"351","line":23,"column":12,"nodeType":"251","messageId":"252","endLine":23,"endColumn":19},{"ruleId":"249","severity":1,"message":"352","line":24,"column":12,"nodeType":"251","messageId":"252","endLine":24,"endColumn":17},{"ruleId":"249","severity":1,"message":"353","line":25,"column":12,"nodeType":"251","messageId":"252","endLine":25,"endColumn":20},{"ruleId":"249","severity":1,"message":"354","line":26,"column":12,"nodeType":"251","messageId":"252","endLine":26,"endColumn":21},{"ruleId":"249","severity":1,"message":"355","line":28,"column":12,"nodeType":"251","messageId":"252","endLine":28,"endColumn":25},{"ruleId":"249","severity":1,"message":"356","line":29,"column":12,"nodeType":"251","messageId":"252","endLine":29,"endColumn":20},{"ruleId":"249","severity":1,"message":"357","line":30,"column":12,"nodeType":"251","messageId":"252","endLine":30,"endColumn":20},{"ruleId":"249","severity":1,"message":"329","line":31,"column":12,"nodeType":"251","messageId":"252","endLine":31,"endColumn":19},{"ruleId":"249","severity":1,"message":"330","line":31,"column":21,"nodeType":"251","messageId":"252","endLine":31,"endColumn":31},{"ruleId":"249","severity":1,"message":"358","line":32,"column":12,"nodeType":"251","messageId":"252","endLine":32,"endColumn":29},{"ruleId":"249","severity":1,"message":"359","line":33,"column":12,"nodeType":"251","messageId":"252","endLine":33,"endColumn":23},{"ruleId":"249","severity":1,"message":"360","line":33,"column":25,"nodeType":"251","messageId":"252","endLine":33,"endColumn":39},{"ruleId":"272","severity":1,"message":"331","line":55,"column":8,"nodeType":"294","endLine":55,"endColumn":24,"suggestions":"361"},{"ruleId":"249","severity":1,"message":"288","line":26,"column":7,"nodeType":"251","messageId":"252","endLine":26,"endColumn":21},{"ruleId":"249","severity":1,"message":"289","line":34,"column":7,"nodeType":"251","messageId":"252","endLine":34,"endColumn":14},{"ruleId":"249","severity":1,"message":"299","line":40,"column":12,"nodeType":"251","messageId":"252","endLine":40,"endColumn":21},{"ruleId":"249","severity":1,"message":"300","line":40,"column":23,"nodeType":"251","messageId":"252","endLine":40,"endColumn":35},{"ruleId":"249","severity":1,"message":"301","line":41,"column":12,"nodeType":"251","messageId":"252","endLine":41,"endColumn":19},{"ruleId":"249","severity":1,"message":"302","line":41,"column":21,"nodeType":"251","messageId":"252","endLine":41,"endColumn":31},{"ruleId":"249","severity":1,"message":"303","line":44,"column":12,"nodeType":"251","messageId":"252","endLine":44,"endColumn":17},{"ruleId":"249","severity":1,"message":"304","line":44,"column":19,"nodeType":"251","messageId":"252","endLine":44,"endColumn":27},{"ruleId":"249","severity":1,"message":"305","line":45,"column":12,"nodeType":"251","messageId":"252","endLine":45,"endColumn":19},{"ruleId":"249","severity":1,"message":"362","line":45,"column":21,"nodeType":"251","messageId":"252","endLine":45,"endColumn":31},{"ruleId":"249","severity":1,"message":"306","line":46,"column":12,"nodeType":"251","messageId":"252","endLine":46,"endColumn":19},{"ruleId":"249","severity":1,"message":"307","line":46,"column":21,"nodeType":"251","messageId":"252","endLine":46,"endColumn":31},{"ruleId":"249","severity":1,"message":"308","line":47,"column":12,"nodeType":"251","messageId":"252","endLine":47,"endColumn":18},{"ruleId":"249","severity":1,"message":"309","line":47,"column":20,"nodeType":"251","messageId":"252","endLine":47,"endColumn":29},{"ruleId":"272","severity":1,"message":"310","line":92,"column":8,"nodeType":"294","endLine":92,"endColumn":10,"suggestions":"363"},{"ruleId":"253","severity":1,"message":"257","line":113,"column":18,"nodeType":"255","messageId":"256","endLine":113,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":121,"column":8,"nodeType":"294","endLine":121,"endColumn":14,"suggestions":"364"},{"ruleId":"249","severity":1,"message":"313","line":5,"column":21,"nodeType":"251","messageId":"252","endLine":5,"endColumn":31},{"ruleId":"249","severity":1,"message":"365","line":9,"column":8,"nodeType":"251","messageId":"252","endLine":9,"endColumn":14},{"ruleId":"249","severity":1,"message":"317","line":43,"column":18,"nodeType":"251","messageId":"252","endLine":43,"endColumn":25},{"ruleId":"249","severity":1,"message":"318","line":44,"column":12,"nodeType":"251","messageId":"252","endLine":44,"endColumn":18},{"ruleId":"249","severity":1,"message":"319","line":44,"column":20,"nodeType":"251","messageId":"252","endLine":44,"endColumn":29},{"ruleId":"249","severity":1,"message":"320","line":45,"column":12,"nodeType":"251","messageId":"252","endLine":45,"endColumn":19},{"ruleId":"249","severity":1,"message":"321","line":46,"column":18,"nodeType":"251","messageId":"252","endLine":46,"endColumn":25},{"ruleId":"249","severity":1,"message":"328","line":1,"column":16,"nodeType":"251","messageId":"252","endLine":1,"endColumn":25},{"ruleId":"249","severity":1,"message":"366","line":16,"column":16,"nodeType":"251","messageId":"252","endLine":16,"endColumn":21},{"ruleId":"249","severity":1,"message":"329","line":29,"column":12,"nodeType":"251","messageId":"252","endLine":29,"endColumn":19},{"ruleId":"249","severity":1,"message":"330","line":29,"column":21,"nodeType":"251","messageId":"252","endLine":29,"endColumn":31},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'t' is assigned a value but never used.",["367"],["368"],"'Avatar' is defined but never used.","'Link' is defined but never used.","'showCount' is assigned a value but never used.","'setShowCount' is assigned a value but never used.","'messageCount' is assigned a value but never used.","'setMessageCount' is assigned a value but never used.","'target' is assigned a value but never used.","'raedIndex' is assigned a value but never used.","'setReadIndex' is assigned a value but never used.","'sortedByKey' is assigned a value but never used.","'setSortedByKey' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'data' array makes the dependencies of useEffect Hook (at line 36) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'data' in its own useMemo() Hook.","VariableDeclarator","'updateNotification' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'HomeIcon' is defined but never used.","'MailIcon' is defined but never used.","'AssessmentIcon' is defined but never used.","'DashboardIcon' is defined but never used.","'GroupIcon' is defined but never used.","'useState' is defined but never used.","'StyledTableRow' is assigned a value but never used.","'classes' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","React Hook React.useEffect has a missing dependency: 'row.deliveryOrderId'. Either include it or remove the dependency array.","ArrayExpression",["369"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isLoadnig' is assigned a value but never used.","'setIsLoadnig' is assigned a value but never used.","'isError' is assigned a value but never used.","'setIsError' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'company' is assigned a value but never used.","'baseNum' is assigned a value but never used.","'setBaseNum' is assigned a value but never used.","'cusNum' is assigned a value but never used.","'setCusNum' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'uploadDate'. Either include it or remove the dependency array.",["370"],["371"],"'withStyles' is defined but never used.","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'Modal' is defined but never used.","'setOpen' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'details' is assigned a value but never used.","'setText' is assigned a value but never used.","'Logo1' is defined but never used.","'Tece' is defined but never used.","'Purmo' is defined but never used.","'Grohe' is defined but never used.","'iterator' is assigned a value but never used.","'setIterator' is assigned a value but never used.","'useEffect' is defined but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.codeBars', 'props.currency', 'props.discountPrcnt', 'props.id', 'props.itemCode', 'props.lineNet', 'props.lineTotal', 'props.lineVat', 'props.onTheWay', 'props.price', 'props.quantity', 'props.scheduledShipDate', and 'props.vatPrcnt'. Either include them or remove the dependency array. If 'setId' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.",["372"],"'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'BellOff' is defined but never used.","'heading' is assigned a value but never used.","'bellSize' is assigned a value but never used.","'sortByDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'key', 'sortedByKey', and 'storageKey'. Either include them or remove the dependency array.",["373"],"'getDayDiff' is assigned a value but never used.","'id' is assigned a value but never used.","'deliverOrderID' is assigned a value but never used.","'setDeliverOrderID' is assigned a value but never used.","'detailsDeliveryOrders' is assigned a value but never used.","'setDetailsDeliveryOrders' is assigned a value but never used.","'itemName' is assigned a value but never used.","'itemCode' is assigned a value but never used.","'quantity' is assigned a value but never used.","'codeBars' is assigned a value but never used.","'lineNet' is assigned a value but never used.","'price' is assigned a value but never used.","'currency' is assigned a value but never used.","'lineTotal' is assigned a value but never used.","'discountPrcnt' is assigned a value but never used.","'vatPrcnt' is assigned a value but never used.","'onTheWay' is assigned a value but never used.","'scheduledShipDate' is assigned a value but never used.","'isModalOpen' is assigned a value but never used.","'setIsModalOpen' is assigned a value but never used.",["374"],"'setCompany' is assigned a value but never used.",["375"],["376"],"'Moment' is defined but never used.","'setId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"383","fix":"387"},{"desc":"379","fix":"388"},{"desc":"381","fix":"389"},"Update the dependencies array to be: [refresh, row.deliveryOrderId]",{"range":"390","text":"391"},"Update the dependencies array to be: [uploadDate]",{"range":"392","text":"393"},"Update the dependencies array to be: [text, uploadDate]",{"range":"394","text":"395"},"Update the dependencies array to be: [props.codeBars, props.currency, props.discountPrcnt, props.id, props.itemCode, props.itemName, props.lineNet, props.lineTotal, props.lineVat, props.onTheWay, props.price, props.quantity, props.scheduledShipDate, props.vatPrcnt]",{"range":"396","text":"397"},"Update the dependencies array to be: [data, key, sortedByKey, storageKey]",{"range":"398","text":"399"},{"range":"400","text":"397"},{"range":"401","text":"393"},{"range":"402","text":"395"},[4168,4177],"[refresh, row.deliveryOrderId]",[2879,2881],"[uploadDate]",[4058,4064],"[text, uploadDate]",[1951,1967],"[props.codeBars, props.currency, props.discountPrcnt, props.id, props.itemCode, props.itemName, props.lineNet, props.lineTotal, props.lineVat, props.onTheWay, props.price, props.quantity, props.scheduledShipDate, props.vatPrcnt]",[3613,3619],"[data, key, sortedByKey, storageKey]",[2289,2305],[2898,2900],[4007,4013]]