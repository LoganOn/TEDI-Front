[{"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js":"1","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js":"2","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js":"3","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js":"4","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js":"5","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js":"6","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js":"7"},{"size":424,"mtime":1611523318836,"results":"8","hashOfConfig":"9"},{"size":820,"mtime":1612112061148,"results":"10","hashOfConfig":"9"},{"size":9754,"mtime":1612087359386,"results":"11","hashOfConfig":"9"},{"size":462,"mtime":1612087359387,"results":"12","hashOfConfig":"9"},{"size":2042,"mtime":1612112600454,"results":"13","hashOfConfig":"9"},{"size":846,"mtime":1612089102560,"results":"14","hashOfConfig":"9"},{"size":10113,"mtime":1612111559205,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7dmyh3",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\index.js",[],["36","37"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\App.js",["38","39","40","41"],"import React, {Component} from \"react\";\r\nimport Login from \"./component/Login\";\r\nimport Sidebar from \"./component/Sidebar\";\r\nimport Tab from \"./component/Tab\";\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Users from \"./component/Users\";\r\nimport styled from 'styled-components'\r\n\r\n// const Container = styled.div`\r\n//   width: 70%;\r\n//   left: 300px;\r\n//   height: 70%;\r\n// `\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Router>\r\n               <Route path='/' component={Sidebar} />\r\n               {/*<Container>*/}\r\n               <Route path='/home' component={Tab} />\r\n               {/*</Container>*/}\r\n            </Router>\r\n         {/*//   <Tab />*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Login.js",["42","43","44","45","46","47","48","49"],"import axios from \"axios\";\r\nimport '../css/Login.css';\r\nimport RegisterImage from '../img/register.svg'\r\nimport LoginImage from '../img/login.svg'\r\nimport React, {Component} from \"react\";\r\n\r\nconst emailRegex = /\\S+@\\S+\\.\\S+/;\r\n\r\nclass Login extends Component{\r\nstate = {\r\n    email: {\r\n        fieldName: 'email',\r\n        value: '',\r\n        //   error: this.props.t('LoginPage.alerts.email'),\r\n        showError: false,\r\n        validate: () => this.validateEmail(),\r\n    },\r\n    password: {\r\n        fieldName: 'password',\r\n        value: '',\r\n        //  error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    repassword: {\r\n        fieldName: 'repassword',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n        validate: () => this.validatePassword(),\r\n    },\r\n    role: {\r\n        fieldName: 'role',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n    },\r\n    company: {\r\n        fieldName: 'company',\r\n        value: '',\r\n        // error: this.props.t('LoginPage.alerts.password'),\r\n        showError: false,\r\n    },\r\n    loginResponse: {\r\n        fieldName: 'loginResponse',\r\n        response: null,\r\n    },\r\n    avatar: {\r\n        fieldName: 'avatar',\r\n        avatarImg: '',\r\n        avatarUserId: '',\r\n    },\r\n    isModalOpen: false,\r\n    signUpMode: false\r\n};\r\n\r\nrefresh = () => {\r\n    window.location.reload(false);\r\n};\r\n\r\ntoggleIsModalOpen = () => {\r\n    const { isModalOpen } = this.state;\r\n    this.setState({ isModalOpen: !isModalOpen });\r\n};\r\n\r\nupdateField = (fieldName, value) => {\r\n    const { state } = this;\r\n    state[fieldName].value = value;\r\n    this.setState(state);\r\n};\r\n\r\nvalidatePassword = () => {\r\n    const { password } = this.state;\r\n    password.showError = password.value.length < 6;\r\n    this.setState({ password });\r\n};\r\n\r\nvalidateEmail = () => {\r\n    const { email } = this.state;\r\n    email.showError = !emailRegex.test(email.value);\r\n    this.setState({ email });\r\n};\r\n\r\nareAllFieldsCorrect = () => {\r\n    const { state } = this;\r\n    const fields = Object.values(state);\r\n    for (let i = 0; i < fields.length - 1; i += 1) {\r\n        if (fields[i].showError) return false;\r\n    }\r\n    return true;\r\n};\r\nhandleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/login', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                if (response.data.role == 'Supplier') {\r\n                    // this.props.history.push('/provider-panel');\r\n                    console.log(\"SUPPLIER\")\r\n                } else if (response.data.role == 'Customer') {\r\n                    console.log(\"Customer\")\r\n                } else  {\r\n                    console.log(\"chuj wie\");\r\n                }\r\n            })\r\n    }\r\n\r\n};\r\n\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\nhandleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { state } = this;\r\n    Object.values(state)\r\n        .forEach((field) => {\r\n            if (field.fieldName != 'loginResponse' && field.fieldName != 'avatar' && field.fieldName) {\r\n                //field.validate();\r\n            }\r\n        });\r\n\r\n    if (this.areAllFieldsCorrect()) {\r\n        delete state.isLoginError;\r\n        const data = {};\r\n        Object.keys(state)\r\n            .forEach((fieldName) => {\r\n                data[fieldName] = state[fieldName].value;\r\n            });\r\n        axios\r\n            .post('http://localhost:8080/api/register', data\r\n            )\r\n            .then((response) => {\r\n                localStorage.setItem('userId', response.data.userId);\r\n                if (response.status == 200) {\r\n                    this.handleClick()\r\n                }\r\n\r\n            })\r\n    }\r\n};\r\n// onLoadedData = (data) => {\r\n//     this.props.onLoadedData({\r\n//         //name: data.name,\r\n//         phone: data.phone,\r\n//         email: data.email,\r\n//         userId: data.userId,\r\n//         imageUrl: data.imageUrl,\r\n//     });\r\n// };\r\n//\r\n// onAuth = (data) => {\r\n//     this.props.onAuth({\r\n//         authenticated: true,\r\n//         role: data.role,\r\n//         token: data.token,\r\n//         refreshToken: data.refreshToken,\r\n//     });\r\n// };\r\n\r\n\r\n// componentDidMount() {\r\n// fetch('Http://localhost:8080/api/users')\r\n//     .then(response => response.json())\r\n//     .then(data =>{\r\n//         console.log(data);\r\n//         this.setState({data})\r\n//     })\r\n// }\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n}\r\n\r\nhandleClick() {\r\n    this.setState(state => ({\r\n        signUpMode: !state.signUpMode\r\n    }));\r\n}\r\n\r\n\r\nrender() {\r\n    const { t } = this.props;\r\n    return (\r\n        <div className={`container ${this.state.signUpMode ? 'sign-up-mode' : null }`}>\r\n            <div className=\"forms-container\">\r\n                <div className=\"signin-signup\">\r\n                    <form action=\"#\" className=\"sign-in-form\">\r\n                        <h2 className=\"title\">Sign in</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\" value={this.state.email.value} />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Login\" className=\"btn solid\" onClick={this.handleLogin}/>\r\n                    </form>\r\n                    <form action=\"#\" className=\"sign-up-form\">\r\n                        <h2 className=\"title\">Sign up</h2>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('role', e.target.value)} placeholder=\"Role\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-user\"></i>\r\n                            <input type=\"text\" onChange={(e) => this.updateField('company', e.target.value)} placeholder=\"Company\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                            <input type=\"email\" onChange={(e) => this.updateField('email', e.target.value)} placeholder=\"Email\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('password', e.target.value)} placeholder=\"Password\"/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" onChange={(e) => this.updateField('repassword', e.target.value)} placeholder=\"Repassword\"/>\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn\" value=\"Sign up\" onClick={this.handleRegister}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"panels-container\">\r\n                <div className=\"panel left-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>New here ?</h3>\r\n                        <p>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Debitis,\r\n                            ex ratione. Aliquid!\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign up\r\n                        </button>\r\n                    </div>\r\n                    <img className=\"image\"  src={LoginImage} alt=\"\"/>\r\n                </div>\r\n                <div className=\"panel right-panel\">\r\n                    <div className=\"content\">\r\n                        <h3>One of us ?</h3>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum\r\n                            laboriosam ad deleniti.\r\n                        </p>\r\n                        <button className=\"btn transparent\" id=\"sign-in-btn\" onClick={this.handleClick}>\r\n                            Sign in\r\n                        </button>\r\n                    </div>\r\n                    <img src={RegisterImage}  className=\"image\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\nexport default Login","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Users.js",[],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Sidebar.js",["50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport \"../css/Sidebar.css\";\r\nimport {SidebarData} from './SidebarData';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Avatar from './img/src_avatar.svg'\r\nimport Logo1 from './img/favicon1.ico'\r\nfunction Sidebar() {\r\n\r\n    const [visible, setVisible] = useState(true);\r\n\r\n    return(\r\n        <body id=\"body-pd\" className={ `${visible ? 'body-pd' : '' }`}>\r\n        <header className={ `${visible ? 'header body-pd' : \"header\" }`} id=\"header\">\r\n            <div className=\"header__toggle\" onClick={() => setVisible(prev => !prev)}>\r\n                <i className='bx bx-menu' id=\"header-toggle\"> {visible ? <MenuIcon/> : <CloseIcon/> }</i>\r\n            </div>\r\n\r\n            <div className=\"header__img\">\r\n                <img src={Avatar} alt=\"\"/>\r\n            </div>\r\n        </header>\r\n        <div className={ `${visible ? 'l-navbar show' : \"l-navbar\"}`} id=\"nav-bar\">\r\n            <nav className= \"nav\" >\r\n                <div>\r\n                    <div className=\"nav__list\">\r\n                        <a className=\"nav__logo\">\r\n                            <img className='nav__logo-icon' src={Logo1}></img>\r\n                            <span className=\"nav__logo-name\">T-EDI</span>\r\n                        </a>\r\n                        {SidebarData.map((val,key) =>{\r\n                            return(\r\n                                <a className=\"nav__link\" id={window.location.pathname == val.link ? \"active\" : \"\"} key={key} onClick={() => {window.location.pathname = val.link}}>\r\n                                    {\" \"}\r\n                                    <div id = \"nav__icon\">{val.icon}</div>\r\n                                    <div id = \"nav__name\">{val.title}</div>\r\n                                </a>\r\n                            )\r\n                        })}}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\SidebarData.js",[],["55","56"],"C:\\Users\\kkraw\\WebstormProjects\\TEDI-Front\\src\\component\\Tab.js",["57","58"],"import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createData(date, supplier, baseRef, numberOrderCustomer, docNet, docVatSum, docTotal) {\r\n    return {\r\n        date,\r\n        supplier,\r\n        baseRef,\r\n        numberOrderCustomer,\r\n        docNet,\r\n        docVatSum,\r\n        docTotal,\r\n        history: [\r\n            { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n            { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n        ],\r\n    };\r\n}\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.date}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.supplier}</TableCell>\r\n                <TableCell align=\"center\">{row.baseRef}</TableCell>\r\n                <TableCell align=\"right\">{row.numberOrderCustomer}</TableCell>\r\n                <TableCell align=\"right\">{row.docNet}</TableCell>\r\n                <TableCell align=\"right\">{row.docVatSum}</TableCell>\r\n                <TableCell align=\"right\">{row.docTotal}</TableCell>\r\n                <TableCell align=\"right\">{row.docTotal}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Szczegóły\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Data modyfikacji</TableCell>\r\n                                        <TableCell>Nr&nbsp;kat</TableCell>\r\n                                        <TableCell align=\"right\">Nazwa</TableCell>\r\n                                        <TableCell align=\"right\">Ilość</TableCell>\r\n                                        <TableCell align=\"right\">EAN</TableCell>\r\n                                        <TableCell align=\"right\">Cena netto</TableCell>\r\n                                        <TableCell align=\"right\">Vat %</TableCell>\r\n                                        <TableCell align=\"right\">Rabat</TableCell>\r\n                                        <TableCell align=\"right\">Czas&nbsp;dostawy</TableCell>\r\n                                        <TableCell align=\"right\">Status</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {row.history.map((historyRow) => (\r\n                                        <TableRow key={historyRow.date}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {historyRow.date}\r\n                                            </TableCell>\r\n                                            <TableCell>{historyRow.customerId}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nRow.propTypes = {\r\n    row: PropTypes.shape({\r\n        supplier: PropTypes.number.isRequired,\r\n        baseRef: PropTypes.number.isRequired,\r\n        numberOrderCustomer: PropTypes.number.isRequired,\r\n        history: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                amount: PropTypes.number.isRequired,\r\n                customerId: PropTypes.string.isRequired,\r\n                date: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        date: PropTypes.string.isRequired,\r\n        docNet: PropTypes.number.isRequired,\r\n        docVatSum: PropTypes.number.isRequired,\r\n        docTotal: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99, 1000),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n    createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\n\r\n\r\n// const classes = makeStyles();\r\n// const [page, setPage] = React.useState(0);\r\n// const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n// const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n// };\r\n//\r\n// const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(+event.target.value);\r\n//     setPage(0);\r\n// };\r\n\r\nclass Tab extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            delivery:[],\r\n            isLoadnig:false,\r\n            isError:false\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.setState({isLoading: true})\r\n\r\n        axios\r\n            .get('http://localhost:8080/api/delivery')\r\n            .then((response) => {\r\n                console.log(response.data.baseRef)\r\n            })\r\n    }\r\n    findAllDeliveryByUser () {\r\n        // axios({\r\n        //     method: 'get',\r\n        //     url: 'http://localhost:8080/api/delivery',\r\n        //\r\n        // }\r\n        //     .then((response) => {\r\n        //       //  localStorage.setItem('userId', response.data.userId);\r\n        //         console.log(response.data.baseRef)\r\n        //     }));\r\n        axios\r\n            .get('http://localhost:8080/api/delivery')\r\n            .then((response) => {\r\n                console.log(response.data.baseRef)\r\n            })\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.findAllDeliveryByUser}>Add</button>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <StyledTableCell />\r\n                                <StyledTableCell>Data</StyledTableCell>\r\n                                <StyledTableCell>Dostawca</StyledTableCell>\r\n                                <StyledTableCell align=\"center\">Numer&nbsp;zamówienia</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Numer&nbsp;klienta</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Klient</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;netto</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Vat</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">Wartość&nbsp;brutto</StyledTableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <Row key={row.name} row={row} />\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {/*<TablePagination*/}\r\n                {/*    rowsPerPageOptions={[10, 25, 100]}*/}\r\n                {/*    component=\"div\"*/}\r\n                {/*    count={rows.length}*/}\r\n                {/*    rowsPerPage={rowsPerPage}*/}\r\n                {/*    page={page}*/}\r\n                {/*    onChangePage={handleChangePage}*/}\r\n                {/*    onChangeRowsPerPage={handleChangeRowsPerPage}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Tab",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":5,"column":34,"nodeType":"65","messageId":"66","endLine":5,"endColumn":44},{"ruleId":"63","severity":1,"message":"68","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":98,"column":33,"nodeType":"72","messageId":"73","endLine":98,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":98,"column":71,"nodeType":"72","messageId":"73","endLine":98,"endColumn":73},{"ruleId":"70","severity":1,"message":"74","line":115,"column":40,"nodeType":"72","messageId":"73","endLine":115,"endColumn":42},{"ruleId":"70","severity":1,"message":"74","line":118,"column":47,"nodeType":"72","messageId":"73","endLine":118,"endColumn":49},{"ruleId":"70","severity":1,"message":"71","line":143,"column":33,"nodeType":"72","messageId":"73","endLine":143,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":143,"column":71,"nodeType":"72","messageId":"73","endLine":143,"endColumn":73},{"ruleId":"70","severity":1,"message":"74","line":160,"column":37,"nodeType":"72","messageId":"73","endLine":160,"endColumn":39},{"ruleId":"63","severity":1,"message":"75","line":209,"column":13,"nodeType":"65","messageId":"66","endLine":209,"endColumn":14},{"ruleId":"63","severity":1,"message":"76","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":27,"column":25,"nodeType":"79","endLine":27,"endColumn":50},{"ruleId":"80","severity":1,"message":"81","line":28,"column":29,"nodeType":"79","endLine":28,"endColumn":73},{"ruleId":"77","severity":1,"message":"78","line":33,"column":33,"nodeType":"79","endLine":33,"endColumn":180},{"ruleId":"70","severity":1,"message":"74","line":33,"column":87,"nodeType":"72","messageId":"73","endLine":33,"endColumn":89},{"ruleId":"59","replacedBy":"82"},{"ruleId":"61","replacedBy":"83"},{"ruleId":"63","severity":1,"message":"84","line":17,"column":8,"nodeType":"65","messageId":"66","endLine":17,"endColumn":23},{"ruleId":"63","severity":1,"message":"85","line":38,"column":7,"nodeType":"65","messageId":"66","endLine":38,"endColumn":21},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'HashRouter' is defined but never used.","'Users' is defined but never used.","'styled' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'t' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["86"],["87"],"'TablePagination' is defined but never used.","'StyledTableRow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]